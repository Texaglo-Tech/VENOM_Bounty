{"ast":null,"code":"let wasm;\nconst cachedTextDecoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n}) : {\n  decode: () => {\n    throw Error('TextDecoder not available');\n  }\n};\nif (typeof TextDecoder !== 'undefined') {\n  cachedTextDecoder.decode();\n}\n;\nlet cachedUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nconst heap = new Array(128).fill(undefined);\nheap.push(undefined, null, true, false);\nlet heap_next = heap.length;\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\nfunction getObject(idx) {\n  return heap[idx];\n}\nfunction isLikeNone(x) {\n  return x === undefined || x === null;\n}\nlet cachedFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n  if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n    cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n  }\n  return cachedFloat64Memory0;\n}\nlet cachedInt32Memory0 = null;\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\nlet WASM_VECTOR_LEN = 0;\nconst cachedTextEncoder = typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : {\n  encode: () => {\n    throw Error('TextEncoder not available');\n  }\n};\nconst encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length) >>> 0;\n    getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n  let len = arg.length;\n  let ptr = malloc(len) >>> 0;\n  const mem = getUint8Memory0();\n  let offset = 0;\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3) >>> 0;\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\nfunction dropObject(idx) {\n  if (idx < 132) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\nfunction debugString(val) {\n  // primitive types\n  const type = typeof val;\n  if (type == 'number' || type == 'boolean' || val == null) {\n    return `${val}`;\n  }\n  if (type == 'string') {\n    return `\"${val}\"`;\n  }\n  if (type == 'symbol') {\n    const description = val.description;\n    if (description == null) {\n      return 'Symbol';\n    } else {\n      return `Symbol(${description})`;\n    }\n  }\n  if (type == 'function') {\n    const name = val.name;\n    if (typeof name == 'string' && name.length > 0) {\n      return `Function(${name})`;\n    } else {\n      return 'Function';\n    }\n  }\n  // objects\n  if (Array.isArray(val)) {\n    const length = val.length;\n    let debug = '[';\n    if (length > 0) {\n      debug += debugString(val[0]);\n    }\n    for (let i = 1; i < length; i++) {\n      debug += ', ' + debugString(val[i]);\n    }\n    debug += ']';\n    return debug;\n  }\n  // Test for built-in\n  const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n  let className;\n  if (builtInMatches.length > 1) {\n    className = builtInMatches[1];\n  } else {\n    // Failed to match the standard '[object ClassName]'\n    return toString.call(val);\n  }\n  if (className == 'Object') {\n    // we're a user defined class or Object\n    // JSON.stringify avoids problems with cycles, and is generally much\n    // easier than looping through ownProperties of `val`.\n    try {\n      return 'Object(' + JSON.stringify(val) + ')';\n    } catch (_) {\n      return 'Object';\n    }\n  }\n  // errors\n  if (val instanceof Error) {\n    return `${val.name}: ${val.message}\\n${val.stack}`;\n  }\n  // TODO we could test for more things here, like `Set`s and `Map`s.\n  return className;\n}\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n  const state = {\n    a: arg0,\n    b: arg1,\n    cnt: 1,\n    dtor\n  };\n  const real = function () {\n    // First up with a closure we increment the internal reference\n    // count. This ensures that the Rust closure environment won't\n    // be deallocated while we're invoking it.\n    state.cnt++;\n    const a = state.a;\n    state.a = 0;\n    try {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return f(a, state.b, ...args);\n    } finally {\n      if (--state.cnt === 0) {\n        wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n      } else {\n        state.a = a;\n      }\n    }\n  };\n  real.original = state;\n  return real;\n}\nfunction __wbg_adapter_34(arg0, arg1, arg2) {\n  wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hf773c3d7bb6081c6(arg0, arg1, addHeapObject(arg2));\n}\nfunction _assertClass(instance, klass) {\n  if (!(instance instanceof klass)) {\n    throw new Error(`expected instance of ${klass.name}`);\n  }\n  return instance.ptr;\n}\n/**\n* @param {string} address\n* @returns {boolean}\n*/\nexport function checkAddress(address) {\n  const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  const len0 = WASM_VECTOR_LEN;\n  const ret = wasm.checkAddress(ptr0, len0);\n  return ret !== 0;\n}\n\n/**\n* @param {string} address\n* @returns {string}\n*/\nexport function repackAddress(address) {\n  let deferred3_0;\n  let deferred3_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.repackAddress(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    var ptr2 = r0;\n    var len2 = r1;\n    if (r3) {\n      ptr2 = 0;\n      len2 = 0;\n      throw takeObject(r2);\n    }\n    deferred3_0 = ptr2;\n    deferred3_1 = len2;\n    return getStringFromWasm0(ptr2, len2);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred3_0, deferred3_1);\n  }\n}\n\n/**\n* @param {ClockWithOffset} clock\n* @param {string} account_stuff_boc\n* @param {string} contract_abi\n* @param {string} method\n* @param {TokensObject} input\n* @param {boolean} responsible\n* @param {number | undefined} signature_id\n* @returns {ExecutionOutput}\n*/\nexport function runLocal(clock, account_stuff_boc, contract_abi, method, input, responsible, signature_id) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    _assertClass(clock, ClockWithOffset);\n    const ptr0 = passStringToWasm0(account_stuff_boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(method, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    wasm.runLocal(retptr, clock.__wbg_ptr, ptr0, len0, ptr1, len1, ptr2, len2, addHeapObject(input), responsible, !isLikeNone(signature_id), isLikeNone(signature_id) ? 0 : signature_id);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string | undefined} account_stuff_boc\n* @returns {string}\n*/\nexport function makeFullAccountBoc(account_stuff_boc) {\n  let deferred3_0;\n  let deferred3_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    var ptr0 = isLikeNone(account_stuff_boc) ? 0 : passStringToWasm0(account_stuff_boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.makeFullAccountBoc(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    var ptr2 = r0;\n    var len2 = r1;\n    if (r3) {\n      ptr2 = 0;\n      len2 = 0;\n      throw takeObject(r2);\n    }\n    deferred3_0 = ptr2;\n    deferred3_1 = len2;\n    return getStringFromWasm0(ptr2, len2);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred3_0, deferred3_1);\n  }\n}\n\n/**\n* @param {string} account\n* @returns {FullContractState | undefined}\n*/\nexport function parseFullAccountBoc(account) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.parseFullAccountBoc(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} config\n* @param {string} account\n* @param {string} message\n* @param {number} utime\n* @param {boolean} disable_signature_check\n* @param {string | undefined} overwrite_balance\n* @param {number | undefined} global_id\n* @returns {TransactionExecutorOutput}\n*/\nexport function executeLocal(config, account, message, utime, disable_signature_check, overwrite_balance, global_id) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(config, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    var ptr3 = isLikeNone(overwrite_balance) ? 0 : passStringToWasm0(overwrite_balance, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    wasm.executeLocal(retptr, ptr0, len0, ptr1, len1, ptr2, len2, utime, disable_signature_check, ptr3, len3, !isLikeNone(global_id), isLikeNone(global_id) ? 0 : global_id);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} tvc\n* @param {string} contract_abi\n* @param {number} workchain_id\n* @param {string | undefined} public_key\n* @param {TokensObject} init_data\n* @returns {ExpectedAddress}\n*/\nexport function getExpectedAddress(tvc, contract_abi, workchain_id, public_key, init_data) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(tvc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    var ptr2 = isLikeNone(public_key) ? 0 : passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    wasm.getExpectedAddress(retptr, ptr0, len0, ptr1, len1, workchain_id, ptr2, len2, addHeapObject(init_data));\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} contract_abi\n* @param {string} boc\n* @param {boolean} allow_partial\n* @returns {TokensObject | undefined}\n*/\nexport function unpackContractFields(contract_abi, boc, allow_partial) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.unpackContractFields(retptr, ptr0, len0, ptr1, len1, allow_partial);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} contract_abi\n* @param {string} data\n* @returns {{ publicKey?: string, data: TokensObject }}\n*/\nexport function unpackInitData(contract_abi, data) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.unpackInitData(retptr, ptr0, len0, ptr1, len1);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} boc\n* @returns {string}\n*/\nexport function getBocHash(boc) {\n  let deferred3_0;\n  let deferred3_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.getBocHash(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    var ptr2 = r0;\n    var len2 = r1;\n    if (r3) {\n      ptr2 = 0;\n      len2 = 0;\n      throw takeObject(r2);\n    }\n    deferred3_0 = ptr2;\n    deferred3_1 = len2;\n    return getStringFromWasm0(ptr2, len2);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred3_0, deferred3_1);\n  }\n}\n\n/**\n* @param {Array<AbiParam>} params\n* @param {TokensObject} tokens\n* @param {string | undefined} abi_version\n* @returns {{ hash: string, boc: string, }}\n*/\nexport function packIntoCell(params, tokens, abi_version) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    var ptr0 = isLikeNone(abi_version) ? 0 : passStringToWasm0(abi_version, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.packIntoCell(retptr, addHeapObject(params), addHeapObject(tokens), ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {Array<AbiParam>} params\n* @param {string} boc\n* @param {boolean} allow_partial\n* @param {string | undefined} abi_version\n* @returns {TokensObject}\n*/\nexport function unpackFromCell(params, boc, allow_partial, abi_version) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    var ptr1 = isLikeNone(abi_version) ? 0 : passStringToWasm0(abi_version, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.unpackFromCell(retptr, addHeapObject(params), ptr0, len0, allow_partial, ptr1, len1);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} boc\n* @returns {string | undefined}\n*/\nexport function extractContractData(boc) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.extractContractData(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    if (r3) {\n      throw takeObject(r2);\n    }\n    let v2;\n    if (r0 !== 0) {\n      v2 = getStringFromWasm0(r0, r1).slice();\n      wasm.__wbindgen_free(r0, r1 * 1);\n    }\n    return v2;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} boc\n* @returns {string}\n*/\nexport function extractPublicKey(boc) {\n  let deferred3_0;\n  let deferred3_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.extractPublicKey(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    var ptr2 = r0;\n    var len2 = r1;\n    if (r3) {\n      ptr2 = 0;\n      len2 = 0;\n      throw takeObject(r2);\n    }\n    deferred3_0 = ptr2;\n    deferred3_1 = len2;\n    return getStringFromWasm0(ptr2, len2);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred3_0, deferred3_1);\n  }\n}\n\n/**\n* @param {string} code\n* @returns {{ hash: string, boc: string, }}\n*/\nexport function codeToTvc(code) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.codeToTvc(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} code\n* @param {string} data\n* @returns {{ hash: string, boc: string, }}\n*/\nexport function mergeTvc(code, data) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.mergeTvc(retptr, ptr0, len0, ptr1, len1);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} tvc\n* @returns {StateInit}\n*/\nexport function splitTvc(tvc) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(tvc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.splitTvc(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} code\n* @param {string} salt\n* @returns {{ hash: string, boc: string, }}\n*/\nexport function setCodeSalt(code, salt) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(salt, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.setCodeSalt(retptr, ptr0, len0, ptr1, len1);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} code\n* @returns {string | undefined}\n*/\nexport function getCodeSalt(code) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.getCodeSalt(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    if (r3) {\n      throw takeObject(r2);\n    }\n    let v2;\n    if (r0 !== 0) {\n      v2 = getStringFromWasm0(r0, r1).slice();\n      wasm.__wbindgen_free(r0, r1 * 1);\n    }\n    return v2;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} contract_abi\n* @param {string} method\n* @param {TokensObject} input\n* @returns {string}\n*/\nexport function encodeInternalInput(contract_abi, method, input) {\n  let deferred4_0;\n  let deferred4_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(method, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.encodeInternalInput(retptr, ptr0, len0, ptr1, len1, addHeapObject(input));\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    var ptr3 = r0;\n    var len3 = r1;\n    if (r3) {\n      ptr3 = 0;\n      len3 = 0;\n      throw takeObject(r2);\n    }\n    deferred4_0 = ptr3;\n    deferred4_1 = len3;\n    return getStringFromWasm0(ptr3, len3);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred4_0, deferred4_1);\n  }\n}\n\n/**\n* @param {string | undefined} src\n* @param {string} dst\n* @param {boolean} bounce\n* @param {string | undefined} state_init\n* @param {string | undefined} body\n* @param {string} amount\n* @param {boolean | undefined} bounced\n* @returns {string}\n*/\nexport function encodeInternalMessage(src, dst, bounce, state_init, body, amount, bounced) {\n  let deferred7_0;\n  let deferred7_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    var ptr0 = isLikeNone(src) ? 0 : passStringToWasm0(src, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(dst, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    var ptr2 = isLikeNone(state_init) ? 0 : passStringToWasm0(state_init, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = isLikeNone(body) ? 0 : passStringToWasm0(body, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    const ptr4 = passStringToWasm0(amount, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len4 = WASM_VECTOR_LEN;\n    wasm.encodeInternalMessage(retptr, ptr0, len0, ptr1, len1, bounce, ptr2, len2, ptr3, len3, ptr4, len4, isLikeNone(bounced) ? 0xFFFFFF : bounced ? 1 : 0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    var ptr6 = r0;\n    var len6 = r1;\n    if (r3) {\n      ptr6 = 0;\n      len6 = 0;\n      throw takeObject(r2);\n    }\n    deferred7_0 = ptr6;\n    deferred7_1 = len6;\n    return getStringFromWasm0(ptr6, len6);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred7_0, deferred7_1);\n  }\n}\n\n/**\n* @param {string} message_body\n* @param {string} contract_abi\n* @param {MethodName} method\n* @param {boolean} internal\n* @returns {DecodedInput | undefined}\n*/\nexport function decodeInput(message_body, contract_abi, method, internal) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(message_body, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.decodeInput(retptr, ptr0, len0, ptr1, len1, addHeapObject(method), internal);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} message_body\n* @param {string} contract_abi\n* @param {MethodName} event\n* @returns {DecodedEvent | undefined}\n*/\nexport function decodeEvent(message_body, contract_abi, event) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(message_body, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.decodeEvent(retptr, ptr0, len0, ptr1, len1, addHeapObject(event));\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} message_body\n* @param {string} contract_abi\n* @param {MethodName} method\n* @returns {DecodedOutput | undefined}\n*/\nexport function decodeOutput(message_body, contract_abi, method) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(message_body, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.decodeOutput(retptr, ptr0, len0, ptr1, len1, addHeapObject(method));\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {Transaction} transaction\n* @param {string} contract_abi\n* @param {MethodName} method\n* @returns {DecodedTransaction | undefined}\n*/\nexport function decodeTransaction(transaction, contract_abi, method) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.decodeTransaction(retptr, addHeapObject(transaction), ptr0, len0, addHeapObject(method));\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {Transaction} transaction\n* @param {string} contract_abi\n* @returns {DecodedTransactionEvents}\n*/\nexport function decodeTransactionEvents(transaction, contract_abi) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.decodeTransactionEvents(retptr, addHeapObject(transaction), ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} boc\n* @returns {TransactionTree}\n*/\nexport function unpackTransactionTree(boc) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.unpackTransactionTree(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} data\n* @returns {string}\n*/\nexport function getDataHash(data) {\n  let deferred3_0;\n  let deferred3_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.getDataHash(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    var ptr2 = r0;\n    var len2 = r1;\n    if (r3) {\n      ptr2 = 0;\n      len2 = 0;\n      throw takeObject(r2);\n    }\n    deferred3_0 = ptr2;\n    deferred3_1 = len2;\n    return getStringFromWasm0(ptr2, len2);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred3_0, deferred3_1);\n  }\n}\n\n/**\n* @returns {Ed25519KeyPair}\n*/\nexport function ed25519_generateKeyPair() {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.ed25519_generateKeyPair(retptr);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} secret_key\n* @param {string} data\n* @param {number | undefined} signature_id\n* @returns {string}\n*/\nexport function ed25519_sign(secret_key, data, signature_id) {\n  let deferred4_0;\n  let deferred4_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(secret_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    wasm.ed25519_sign(retptr, ptr0, len0, ptr1, len1, !isLikeNone(signature_id), isLikeNone(signature_id) ? 0 : signature_id);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    var r3 = getInt32Memory0()[retptr / 4 + 3];\n    var ptr3 = r0;\n    var len3 = r1;\n    if (r3) {\n      ptr3 = 0;\n      len3 = 0;\n      throw takeObject(r2);\n    }\n    deferred4_0 = ptr3;\n    deferred4_1 = len3;\n    return getStringFromWasm0(ptr3, len3);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred4_0, deferred4_1);\n  }\n}\n\n/**\n* @param {string} signature\n* @returns {ExtendedSignature}\n*/\nexport function extendSignature(signature) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(signature, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.extendSignature(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} public_key\n* @param {string} data\n* @param {string} signature\n* @param {number | undefined} signature_id\n* @returns {boolean}\n*/\nexport function verifySignature(public_key, data, signature, signature_id) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(signature, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    wasm.verifySignature(retptr, ptr0, len0, ptr1, len1, ptr2, len2, !isLikeNone(signature_id), isLikeNone(signature_id) ? 0 : signature_id);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return r0 !== 0;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {string} dst\n* @param {string | undefined} state_init\n* @param {string | undefined} body\n* @param {number} expire_at\n* @returns {SignedMessage}\n*/\nexport function createRawExternalMessage(dst, state_init, body, expire_at) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(dst, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    var ptr1 = isLikeNone(state_init) ? 0 : passStringToWasm0(state_init, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = isLikeNone(body) ? 0 : passStringToWasm0(body, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    wasm.createRawExternalMessage(retptr, ptr0, len0, ptr1, len1, ptr2, len2, expire_at);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {ClockWithOffset} clock\n* @param {string} dst\n* @param {string} contract_abi\n* @param {string} method\n* @param {string | undefined} state_init\n* @param {TokensObject} input\n* @param {number} timeout\n* @returns {SignedMessage}\n*/\nexport function createExternalMessageWithoutSignature(clock, dst, contract_abi, method, state_init, input, timeout) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    _assertClass(clock, ClockWithOffset);\n    const ptr0 = passStringToWasm0(dst, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(method, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    var ptr3 = isLikeNone(state_init) ? 0 : passStringToWasm0(state_init, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    wasm.createExternalMessageWithoutSignature(retptr, clock.__wbg_ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, addHeapObject(input), timeout);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n* @param {ClockWithOffset} clock\n* @param {string} dst\n* @param {string} contract_abi\n* @param {string} method\n* @param {string | undefined} state_init\n* @param {TokensObject} input\n* @param {string} public_key\n* @param {number} timeout\n* @returns {UnsignedMessage}\n*/\nexport function createExternalMessage(clock, dst, contract_abi, method, state_init, input, public_key, timeout) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    _assertClass(clock, ClockWithOffset);\n    const ptr0 = passStringToWasm0(dst, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(method, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    var ptr3 = isLikeNone(state_init) ? 0 : passStringToWasm0(state_init, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    const ptr4 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len4 = WASM_VECTOR_LEN;\n    wasm.createExternalMessage(retptr, clock.__wbg_ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, addHeapObject(input), ptr4, len4, timeout);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    var r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return UnsignedMessage.__wrap(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\nfunction handleError(f, args) {\n  try {\n    return f.apply(this, args);\n  } catch (e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n  }\n}\nfunction __wbg_adapter_171(arg0, arg1, arg2, arg3) {\n  wasm.wasm_bindgen__convert__closures__invoke2_mut__h9bec1e94e3cdfbe9(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n*/\nexport class ClockWithOffset {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(ClockWithOffset.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_clockwithoffset_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.clockwithoffset_new();\n    return ClockWithOffset.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n  get nowMs() {\n    const ret = wasm.clockwithoffset_nowMs(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @param {number} offset_ms\n  */\n  updateOffset(offset_ms) {\n    wasm.clockwithoffset_updateOffset(this.__wbg_ptr, offset_ms);\n  }\n  /**\n  * @returns {number}\n  */\n  offsetMs() {\n    const ret = wasm.clockwithoffset_offsetMs(this.__wbg_ptr);\n    return ret;\n  }\n}\n/**\n*/\nexport class GenericContract {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(GenericContract.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_genericcontract_free(ptr);\n  }\n  /**\n  * @returns {string}\n  */\n  get address() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.genericcontract_address(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_free(deferred1_0, deferred1_1);\n    }\n  }\n  /**\n  * @param {SignedMessage} message\n  * @param {ExecutorParams | undefined} params\n  * @returns {Promise<Transaction>}\n  */\n  sendMessageLocally(message, params) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.genericcontract_sendMessageLocally(retptr, this.__wbg_ptr, addHeapObject(message), addHeapObject(params));\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {SignedMessage} message\n  * @returns {Promise<PendingTransaction>}\n  */\n  sendMessage(message) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.genericcontract_sendMessage(retptr, this.__wbg_ptr, addHeapObject(message));\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {Promise<PollingMethod>}\n  */\n  refresh() {\n    const ret = wasm.genericcontract_refresh(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  /**\n  * @param {string} block_id\n  * @returns {Promise<PollingMethod>}\n  */\n  handleBlock(block_id) {\n    const ptr0 = passStringToWasm0(block_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.genericcontract_handleBlock(this.__wbg_ptr, ptr0, len0);\n    return takeObject(ret);\n  }\n  /**\n  * @param {string} lt\n  * @returns {Promise<void>}\n  */\n  preloadTransactions(lt) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(lt, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.genericcontract_preloadTransactions(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {PollingMethod}\n  */\n  get pollingMethod() {\n    const ret = wasm.genericcontract_pollingMethod(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n}\n/**\n*/\nexport class GqlConnection {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(GqlConnection.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_gqlconnection_free(ptr);\n  }\n  /**\n  * @param {ClockWithOffset} clock\n  * @param {IGqlSender} sender\n  */\n  constructor(clock, sender) {\n    _assertClass(clock, ClockWithOffset);\n    const ret = wasm.gqlconnection_new(clock.__wbg_ptr, addHeapObject(sender));\n    return GqlConnection.__wrap(ret);\n  }\n  /**\n  * @param {string} address\n  * @returns {Promise<LatestBlock>}\n  */\n  getLatestBlock(address) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.gqlconnection_getLatestBlock(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {string} current_block_id\n  * @param {string} address\n  * @param {number} timeout\n  * @returns {Promise<string>}\n  */\n  waitForNextBlock(current_block_id, address, timeout) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(current_block_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      const ptr1 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len1 = WASM_VECTOR_LEN;\n      wasm.gqlconnection_waitForNextBlock(retptr, this.__wbg_ptr, ptr0, len0, ptr1, len1, timeout);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\n/**\n*/\nexport class GqlQuery {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(GqlQuery.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_gqlquery_free(ptr);\n  }\n  /**\n  * @param {string} data\n  */\n  onReceive(data) {\n    const ptr = this.__destroy_into_raw();\n    const ptr0 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.gqlquery_onReceive(ptr, ptr0, len0);\n  }\n  /**\n  * @param {any} arg0\n  */\n  onError(arg0) {\n    const ptr = this.__destroy_into_raw();\n    wasm.gqlquery_onError(ptr, addHeapObject(arg0));\n  }\n  /**\n  */\n  onTimeout() {\n    const ptr = this.__destroy_into_raw();\n    wasm.gqlquery_onTimeout(ptr);\n  }\n}\n/**\n*/\nexport class JrpcConnection {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(JrpcConnection.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_jrpcconnection_free(ptr);\n  }\n  /**\n  * @param {ClockWithOffset} clock\n  * @param {any} sender\n  */\n  constructor(clock, sender) {\n    _assertClass(clock, ClockWithOffset);\n    const ret = wasm.gqlconnection_new(clock.__wbg_ptr, addHeapObject(sender));\n    return JrpcConnection.__wrap(ret);\n  }\n}\n/**\n*/\nexport class JrpcQuery {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(JrpcQuery.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_jrpcquery_free(ptr);\n  }\n  /**\n  * @param {string} data\n  */\n  onReceive(data) {\n    const ptr = this.__destroy_into_raw();\n    const ptr0 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.gqlquery_onReceive(ptr, ptr0, len0);\n  }\n  /**\n  * @param {any} arg0\n  */\n  onError(arg0) {\n    const ptr = this.__destroy_into_raw();\n    wasm.gqlquery_onError(ptr, addHeapObject(arg0));\n  }\n  /**\n  */\n  onTimeout() {\n    const ptr = this.__destroy_into_raw();\n    wasm.gqlquery_onTimeout(ptr);\n  }\n}\n/**\n*/\nexport class Transport {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(Transport.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_transport_free(ptr);\n  }\n  /**\n  * @param {GqlConnection} gql\n  * @returns {Transport}\n  */\n  static fromGqlConnection(gql) {\n    _assertClass(gql, GqlConnection);\n    const ret = wasm.transport_fromGqlConnection(gql.__wbg_ptr);\n    return Transport.__wrap(ret);\n  }\n  /**\n  * @param {JrpcConnection} jrpc\n  * @returns {Transport}\n  */\n  static fromJrpcConnection(jrpc) {\n    _assertClass(jrpc, JrpcConnection);\n    const ret = wasm.transport_fromJrpcConnection(jrpc.__wbg_ptr);\n    return Transport.__wrap(ret);\n  }\n  /**\n  * @returns {Promise<NetworkDescription>}\n  */\n  getNetworkDescription() {\n    const ret = wasm.transport_getNetworkDescription(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  /**\n  * @returns {Promise<number | undefined>}\n  */\n  getSignatureId() {\n    const ret = wasm.transport_getSignatureId(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  /**\n  * @param {boolean | undefined} force\n  * @returns {Promise<string>}\n  */\n  getBlockchainConfig(force) {\n    const ret = wasm.transport_getBlockchainConfig(this.__wbg_ptr, isLikeNone(force) ? 0xFFFFFF : force ? 1 : 0);\n    return takeObject(ret);\n  }\n  /**\n  * @param {string} address\n  * @param {any} handler\n  * @returns {Promise<GenericContract>}\n  */\n  subscribeToGenericContract(address, handler) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.transport_subscribeToGenericContract(retptr, this.__wbg_ptr, ptr0, len0, addHeapObject(handler));\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {string} address\n  * @returns {Promise<FullContractState | undefined>}\n  */\n  getFullContractState(address) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.transport_getFullContractState(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {string} code_hash\n  * @param {number} limit\n  * @param {string | undefined} continuation\n  * @returns {Promise<AccountsList>}\n  */\n  getAccountsByCodeHash(code_hash, limit, continuation) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(code_hash, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      var ptr1 = isLikeNone(continuation) ? 0 : passStringToWasm0(continuation, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      var len1 = WASM_VECTOR_LEN;\n      wasm.transport_getAccountsByCodeHash(retptr, this.__wbg_ptr, ptr0, len0, limit, ptr1, len1);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {string} address\n  * @param {string | undefined} continuation\n  * @param {number} limit\n  * @returns {Promise<TransactionsList>}\n  */\n  getTransactions(address, continuation, limit) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      var ptr1 = isLikeNone(continuation) ? 0 : passStringToWasm0(continuation, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      var len1 = WASM_VECTOR_LEN;\n      wasm.transport_getTransactions(retptr, this.__wbg_ptr, ptr0, len0, ptr1, len1, limit);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {string} hash\n  * @returns {Promise<Transaction | undefined>}\n  */\n  getTransaction(hash) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(hash, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.transport_getTransaction(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {string} message_hash\n  * @returns {Promise<Transaction | undefined>}\n  */\n  getDstTransaction(message_hash) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(message_hash, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.transport_getDstTransaction(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\n/**\n*/\nexport class UnsignedMessage {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(UnsignedMessage.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_unsignedmessage_free(ptr);\n  }\n  /**\n  * @param {ClockWithOffset} clock\n  */\n  refreshTimeout(clock) {\n    _assertClass(clock, ClockWithOffset);\n    wasm.unsignedmessage_refreshTimeout(this.__wbg_ptr, clock.__wbg_ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  expireAt() {\n    const ret = wasm.unsignedmessage_expireAt(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {string}\n  */\n  get hash() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.unsignedmessage_hash(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_free(deferred1_0, deferred1_1);\n    }\n  }\n  /**\n  * @param {string} signature\n  * @returns {SignedMessage}\n  */\n  sign(signature) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(signature, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.unsignedmessage_sign(retptr, this.__wbg_ptr, ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {SignedMessage}\n  */\n  signFake() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.unsignedmessage_signFake(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\nasync function __wbg_load(module, imports) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get('Content-Type') != 'application/wasm') {\n          console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n        } else {\n          throw e;\n        }\n      }\n    }\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n    if (instance instanceof WebAssembly.Instance) {\n      return {\n        instance,\n        module\n      };\n    } else {\n      return instance;\n    }\n  }\n}\nfunction __wbg_get_imports() {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_string_new = function (arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_length_820c786973abdd8a = function (arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n  };\n  imports.wbg.__wbindgen_is_undefined = function (arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n  };\n  imports.wbg.__wbindgen_number_get = function (arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof obj === 'number' ? obj : undefined;\n    getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n    getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n  };\n  imports.wbg.__wbindgen_is_null = function (arg0) {\n    const ret = getObject(arg0) === null;\n    return ret;\n  };\n  imports.wbg.__wbindgen_string_get = function (arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof obj === 'string' ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n  };\n  imports.wbg.__wbindgen_is_object = function (arg0) {\n    const val = getObject(arg0);\n    const ret = typeof val === 'object' && val !== null;\n    return ret;\n  };\n  imports.wbg.__wbindgen_is_string = function (arg0) {\n    const ret = typeof getObject(arg0) === 'string';\n    return ret;\n  };\n  imports.wbg.__wbg_new_2b6fea4ea03b1b95 = function () {\n    const ret = new Object();\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_87297f22973157c8 = function (arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_0394642eae39db16 = function () {\n    const ret = new Array();\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_push_109cfc26d02582dd = function (arg0, arg1) {\n    const ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n  };\n  imports.wbg.__wbg_genericcontract_new = function (arg0) {\n    const ret = GenericContract.__wrap(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_object_drop_ref = function (arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbindgen_number_new = function (arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_now_c857fb0367c762cc = function () {\n    const ret = Date.now();\n    return ret;\n  };\n  imports.wbg.__wbg_onMessageSent_757373d6a862a07b = function (arg0, arg1, arg2) {\n    getObject(arg0).onMessageSent(takeObject(arg1), takeObject(arg2));\n  };\n  imports.wbg.__wbg_onMessageExpired_11fc606f8e92df5d = function (arg0, arg1) {\n    getObject(arg0).onMessageExpired(takeObject(arg1));\n  };\n  imports.wbg.__wbg_onStateChanged_ebb55988a24f850f = function (arg0, arg1) {\n    getObject(arg0).onStateChanged(takeObject(arg1));\n  };\n  imports.wbg.__wbg_onTransactionsFound_506d6112e4ede861 = function (arg0, arg1, arg2) {\n    getObject(arg0).onTransactionsFound(takeObject(arg1), takeObject(arg2));\n  };\n  imports.wbg.__wbindgen_object_clone_ref = function (arg0) {\n    const ret = getObject(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_keys_964fd67be8b2f724 = function (arg0) {\n    const ret = Object.keys(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_get_7303ed2ef026b2f5 = function (arg0, arg1) {\n    const ret = getObject(arg0)[arg1 >>> 0];\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_boolean_get = function (arg0) {\n    const v = getObject(arg0);\n    const ret = typeof v === 'boolean' ? v ? 1 : 0 : 2;\n    return ret;\n  };\n  imports.wbg.__wbg_isLocal_d4fc77f7ade8cfcf = function (arg0) {\n    const ret = getObject(arg0).isLocal();\n    return ret;\n  };\n  imports.wbg.__wbg_send_8081bb0b96786723 = function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).send(getStringFromWasm0(arg1, arg2), GqlQuery.__wrap(arg3), arg4 !== 0);\n  };\n  imports.wbg.__wbg_send_463856ee270e19ba = function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).send(getStringFromWasm0(arg1, arg2), JrpcQuery.__wrap(arg3), arg4 !== 0);\n  };\n  imports.wbg.__wbg_stringify_d06ad2addc54d51e = function () {\n    return handleError(function (arg0) {\n      const ret = JSON.stringify(getObject(arg0));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_new_2b55e405e4af4986 = function (arg0, arg1) {\n    try {\n      var state0 = {\n        a: arg0,\n        b: arg1\n      };\n      var cb0 = (arg0, arg1) => {\n        const a = state0.a;\n        state0.a = 0;\n        try {\n          return __wbg_adapter_171(a, state0.b, arg0, arg1);\n        } finally {\n          state0.a = a;\n        }\n      };\n      const ret = new Promise(cb0);\n      return addHeapObject(ret);\n    } finally {\n      state0.a = state0.b = 0;\n    }\n  };\n  imports.wbg.__wbg_crypto_70a96de3b6b73dac = function (arg0) {\n    const ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_process_dd1577445152112e = function (arg0) {\n    const ret = getObject(arg0).process;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_versions_58036bec3add9e6f = function (arg0) {\n    const ret = getObject(arg0).versions;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_node_6a9d28205ed5b0d8 = function (arg0) {\n    const ret = getObject(arg0).node;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_require_f05d779769764e82 = function () {\n    return handleError(function () {\n      const ret = module.require;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_is_function = function (arg0) {\n    const ret = typeof getObject(arg0) === 'function';\n    return ret;\n  };\n  imports.wbg.__wbg_msCrypto_adbc770ec9eca9c7 = function (arg0) {\n    const ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_newwithlength_89eeca401d8918c2 = function (arg0) {\n    const ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_get_f53c921291c381bd = function () {\n    return handleError(function (arg0, arg1) {\n      const ret = Reflect.get(getObject(arg0), getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_self_742dd6eab3e9211e = function () {\n    return handleError(function () {\n      const ret = self.self;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_window_c409e731db53a0e2 = function () {\n    return handleError(function () {\n      const ret = window.window;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_globalThis_b70c095388441f2d = function () {\n    return handleError(function () {\n      const ret = globalThis.globalThis;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_global_1c72617491ed7194 = function () {\n    return handleError(function () {\n      const ret = global.global;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_newnoargs_c9e6043b8ad84109 = function (arg0, arg1) {\n    const ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_call_557a2f2deacc4912 = function () {\n    return handleError(function (arg0, arg1) {\n      const ret = getObject(arg0).call(getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_isArray_04e59fb73f78ab5b = function (arg0) {\n    const ret = Array.isArray(getObject(arg0));\n    return ret;\n  };\n  imports.wbg.__wbg_call_587b30eea3e09332 = function () {\n    return handleError(function (arg0, arg1, arg2) {\n      const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_set_07da13cc24b69217 = function () {\n    return handleError(function (arg0, arg1, arg2) {\n      const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n      return ret;\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_memory = function () {\n    const ret = wasm.memory;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_buffer_55ba7a6b1b92e2ac = function (arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_newwithbyteoffsetandlength_88d1d8be5df94b9b = function (arg0, arg1, arg2) {\n    const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_randomFillSync_e950366c42764a07 = function () {\n    return handleError(function (arg0, arg1) {\n      getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments);\n  };\n  imports.wbg.__wbg_subarray_d82be056deb4ad27 = function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_getRandomValues_3774744e221a22ad = function () {\n    return handleError(function (arg0, arg1) {\n      getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments);\n  };\n  imports.wbg.__wbg_new_09938a7d020f049b = function (arg0) {\n    const ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_set_3698e3ca519b3c3c = function (arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n  };\n  imports.wbg.__wbindgen_debug_string = function (arg0, arg1) {\n    const ret = debugString(getObject(arg1));\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n  };\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n  imports.wbg.__wbg_then_8df675b8bb5d5e3c = function (arg0, arg1) {\n    const ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_cb_drop = function (arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n      obj.a = 0;\n      return true;\n    }\n    const ret = false;\n    return ret;\n  };\n  imports.wbg.__wbg_resolve_ae38ad63c43ff98b = function (arg0) {\n    const ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_closure_wrapper5056 = function (arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 941, __wbg_adapter_34);\n    return addHeapObject(ret);\n  };\n  return imports;\n}\nfunction __wbg_init_memory(imports, maybe_memory) {}\nfunction __wbg_finalize_init(instance, module) {\n  wasm = instance.exports;\n  __wbg_init.__wbindgen_wasm_module = module;\n  cachedFloat64Memory0 = null;\n  cachedInt32Memory0 = null;\n  cachedUint8Memory0 = null;\n  return wasm;\n}\nfunction initSync(module) {\n  if (wasm !== undefined) return wasm;\n  const imports = __wbg_get_imports();\n  __wbg_init_memory(imports);\n  if (!(module instanceof WebAssembly.Module)) {\n    module = new WebAssembly.Module(module);\n  }\n  const instance = new WebAssembly.Instance(module, imports);\n  return __wbg_finalize_init(instance, module);\n}\nasync function __wbg_init(input) {\n  if (wasm !== undefined) return wasm;\n  if (typeof input === 'undefined') {\n    input = new URL('nekoton_wasm_bg.wasm', import.meta.url);\n  }\n  const imports = __wbg_get_imports();\n  if (typeof input === 'string' || typeof Request === 'function' && input instanceof Request || typeof URL === 'function' && input instanceof URL) {\n    input = fetch(input);\n  }\n  __wbg_init_memory(imports);\n  const {\n    instance,\n    module\n  } = await __wbg_load(await input, imports);\n  return __wbg_finalize_init(instance, module);\n}\nexport { initSync };\nexport default __wbg_init;","map":{"version":3,"names":["wasm","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","Error","cachedUint8Memory0","getUint8Memory0","byteLength","Uint8Array","memory","buffer","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","isLikeNone","x","cachedFloat64Memory0","getFloat64Memory0","Float64Array","cachedInt32Memory0","getInt32Memory0","Int32Array","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encode","encodeString","encodeInto","arg","view","buf","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","ret","dropObject","takeObject","debugString","val","type","description","name","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","message","stack","makeMutClosure","arg0","arg1","dtor","f","state","a","b","cnt","real","_len","arguments","args","_key","__wbindgen_export_2","get","original","__wbg_adapter_34","arg2","_dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hf773c3d7bb6081c6","_assertClass","instance","klass","checkAddress","address","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","repackAddress","deferred3_0","deferred3_1","retptr","__wbindgen_add_to_stack_pointer","r0","r1","r2","r3","ptr2","len2","__wbindgen_free","runLocal","clock","account_stuff_boc","contract_abi","method","input","responsible","signature_id","ClockWithOffset","ptr1","len1","__wbg_ptr","makeFullAccountBoc","parseFullAccountBoc","account","executeLocal","config","utime","disable_signature_check","overwrite_balance","global_id","ptr3","len3","getExpectedAddress","tvc","workchain_id","public_key","init_data","unpackContractFields","boc","allow_partial","unpackInitData","data","getBocHash","packIntoCell","params","tokens","abi_version","unpackFromCell","extractContractData","v2","extractPublicKey","codeToTvc","mergeTvc","splitTvc","setCodeSalt","salt","getCodeSalt","encodeInternalInput","deferred4_0","deferred4_1","encodeInternalMessage","src","dst","bounce","state_init","body","amount","bounced","deferred7_0","deferred7_1","ptr4","len4","ptr6","len6","decodeInput","message_body","internal","decodeEvent","event","decodeOutput","decodeTransaction","transaction","decodeTransactionEvents","unpackTransactionTree","getDataHash","ed25519_generateKeyPair","ed25519_sign","secret_key","extendSignature","signature","verifySignature","createRawExternalMessage","expire_at","createExternalMessageWithoutSignature","timeout","createExternalMessage","UnsignedMessage","__wrap","handleError","apply","e","__wbindgen_exn_store","__wbg_adapter_171","arg3","wasm_bindgen__convert__closures__invoke2_mut__h9bec1e94e3cdfbe9","Object","create","prototype","__destroy_into_raw","free","__wbg_clockwithoffset_free","constructor","clockwithoffset_new","nowMs","clockwithoffset_nowMs","updateOffset","offset_ms","clockwithoffset_updateOffset","offsetMs","clockwithoffset_offsetMs","GenericContract","__wbg_genericcontract_free","deferred1_0","deferred1_1","genericcontract_address","sendMessageLocally","genericcontract_sendMessageLocally","sendMessage","genericcontract_sendMessage","refresh","genericcontract_refresh","handleBlock","block_id","genericcontract_handleBlock","preloadTransactions","lt","genericcontract_preloadTransactions","pollingMethod","genericcontract_pollingMethod","GqlConnection","__wbg_gqlconnection_free","sender","gqlconnection_new","getLatestBlock","gqlconnection_getLatestBlock","waitForNextBlock","current_block_id","gqlconnection_waitForNextBlock","GqlQuery","__wbg_gqlquery_free","onReceive","gqlquery_onReceive","onError","gqlquery_onError","onTimeout","gqlquery_onTimeout","JrpcConnection","__wbg_jrpcconnection_free","JrpcQuery","__wbg_jrpcquery_free","Transport","__wbg_transport_free","fromGqlConnection","gql","transport_fromGqlConnection","fromJrpcConnection","jrpc","transport_fromJrpcConnection","getNetworkDescription","transport_getNetworkDescription","getSignatureId","transport_getSignatureId","getBlockchainConfig","force","transport_getBlockchainConfig","subscribeToGenericContract","handler","transport_subscribeToGenericContract","getFullContractState","transport_getFullContractState","getAccountsByCodeHash","code_hash","limit","continuation","transport_getAccountsByCodeHash","getTransactions","transport_getTransactions","getTransaction","hash","transport_getTransaction","getDstTransaction","message_hash","transport_getDstTransaction","__wbg_unsignedmessage_free","refreshTimeout","unsignedmessage_refreshTimeout","expireAt","unsignedmessage_expireAt","unsignedmessage_hash","sign","unsignedmessage_sign","signFake","unsignedmessage_signFake","__wbg_load","module","imports","Response","WebAssembly","instantiateStreaming","headers","console","warn","bytes","arrayBuffer","instantiate","Instance","__wbg_get_imports","wbg","__wbindgen_string_new","__wbg_length_820c786973abdd8a","__wbindgen_is_undefined","__wbindgen_number_get","__wbindgen_is_null","__wbindgen_string_get","__wbindgen_is_object","__wbindgen_is_string","__wbg_new_2b6fea4ea03b1b95","__wbg_new_87297f22973157c8","__wbg_new_0394642eae39db16","__wbg_push_109cfc26d02582dd","__wbg_genericcontract_new","__wbindgen_object_drop_ref","__wbindgen_number_new","__wbg_now_c857fb0367c762cc","Date","now","__wbg_onMessageSent_757373d6a862a07b","onMessageSent","__wbg_onMessageExpired_11fc606f8e92df5d","onMessageExpired","__wbg_onStateChanged_ebb55988a24f850f","onStateChanged","__wbg_onTransactionsFound_506d6112e4ede861","onTransactionsFound","__wbindgen_object_clone_ref","__wbg_keys_964fd67be8b2f724","keys","__wbg_get_7303ed2ef026b2f5","__wbindgen_boolean_get","v","__wbg_isLocal_d4fc77f7ade8cfcf","isLocal","__wbg_send_8081bb0b96786723","arg4","send","__wbg_send_463856ee270e19ba","__wbg_stringify_d06ad2addc54d51e","__wbg_new_2b55e405e4af4986","state0","cb0","Promise","__wbg_crypto_70a96de3b6b73dac","crypto","__wbg_process_dd1577445152112e","process","__wbg_versions_58036bec3add9e6f","versions","__wbg_node_6a9d28205ed5b0d8","node","__wbg_require_f05d779769764e82","require","__wbindgen_is_function","__wbg_msCrypto_adbc770ec9eca9c7","msCrypto","__wbg_newwithlength_89eeca401d8918c2","__wbg_get_f53c921291c381bd","Reflect","__wbg_self_742dd6eab3e9211e","self","__wbg_window_c409e731db53a0e2","window","__wbg_globalThis_b70c095388441f2d","globalThis","__wbg_global_1c72617491ed7194","global","__wbg_newnoargs_c9e6043b8ad84109","Function","__wbg_call_557a2f2deacc4912","__wbg_isArray_04e59fb73f78ab5b","__wbg_call_587b30eea3e09332","__wbg_set_07da13cc24b69217","__wbindgen_memory","__wbg_buffer_55ba7a6b1b92e2ac","__wbg_newwithbyteoffsetandlength_88d1d8be5df94b9b","__wbg_randomFillSync_e950366c42764a07","randomFillSync","__wbg_subarray_d82be056deb4ad27","__wbg_getRandomValues_3774744e221a22ad","getRandomValues","__wbg_new_09938a7d020f049b","__wbg_set_3698e3ca519b3c3c","__wbindgen_debug_string","__wbindgen_throw","__wbg_then_8df675b8bb5d5e3c","then","__wbindgen_cb_drop","__wbg_resolve_ae38ad63c43ff98b","resolve","__wbindgen_closure_wrapper5056","__wbg_init_memory","maybe_memory","__wbg_finalize_init","exports","__wbg_init","__wbindgen_wasm_module","initSync","Module","URL","import","meta","url","Request","fetch"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/node_modules/nekoton-wasm/nekoton_wasm.js"],"sourcesContent":["let wasm;\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_34(arg0, arg1, arg2) {\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hf773c3d7bb6081c6(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n* @param {string} address\n* @returns {boolean}\n*/\nexport function checkAddress(address) {\n    const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.checkAddress(ptr0, len0);\n    return ret !== 0;\n}\n\n/**\n* @param {string} address\n* @returns {string}\n*/\nexport function repackAddress(address) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.repackAddress(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        var ptr2 = r0;\n        var len2 = r1;\n        if (r3) {\n            ptr2 = 0; len2 = 0;\n            throw takeObject(r2);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred3_0, deferred3_1);\n    }\n}\n\n/**\n* @param {ClockWithOffset} clock\n* @param {string} account_stuff_boc\n* @param {string} contract_abi\n* @param {string} method\n* @param {TokensObject} input\n* @param {boolean} responsible\n* @param {number | undefined} signature_id\n* @returns {ExecutionOutput}\n*/\nexport function runLocal(clock, account_stuff_boc, contract_abi, method, input, responsible, signature_id) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(clock, ClockWithOffset);\n        const ptr0 = passStringToWasm0(account_stuff_boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(method, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        wasm.runLocal(retptr, clock.__wbg_ptr, ptr0, len0, ptr1, len1, ptr2, len2, addHeapObject(input), responsible, !isLikeNone(signature_id), isLikeNone(signature_id) ? 0 : signature_id);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string | undefined} account_stuff_boc\n* @returns {string}\n*/\nexport function makeFullAccountBoc(account_stuff_boc) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = isLikeNone(account_stuff_boc) ? 0 : passStringToWasm0(account_stuff_boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.makeFullAccountBoc(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        var ptr2 = r0;\n        var len2 = r1;\n        if (r3) {\n            ptr2 = 0; len2 = 0;\n            throw takeObject(r2);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred3_0, deferred3_1);\n    }\n}\n\n/**\n* @param {string} account\n* @returns {FullContractState | undefined}\n*/\nexport function parseFullAccountBoc(account) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.parseFullAccountBoc(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} config\n* @param {string} account\n* @param {string} message\n* @param {number} utime\n* @param {boolean} disable_signature_check\n* @param {string | undefined} overwrite_balance\n* @param {number | undefined} global_id\n* @returns {TransactionExecutorOutput}\n*/\nexport function executeLocal(config, account, message, utime, disable_signature_check, overwrite_balance, global_id) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(config, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(account, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        var ptr3 = isLikeNone(overwrite_balance) ? 0 : passStringToWasm0(overwrite_balance, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        wasm.executeLocal(retptr, ptr0, len0, ptr1, len1, ptr2, len2, utime, disable_signature_check, ptr3, len3, !isLikeNone(global_id), isLikeNone(global_id) ? 0 : global_id);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} tvc\n* @param {string} contract_abi\n* @param {number} workchain_id\n* @param {string | undefined} public_key\n* @param {TokensObject} init_data\n* @returns {ExpectedAddress}\n*/\nexport function getExpectedAddress(tvc, contract_abi, workchain_id, public_key, init_data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(tvc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(public_key) ? 0 : passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        wasm.getExpectedAddress(retptr, ptr0, len0, ptr1, len1, workchain_id, ptr2, len2, addHeapObject(init_data));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} contract_abi\n* @param {string} boc\n* @param {boolean} allow_partial\n* @returns {TokensObject | undefined}\n*/\nexport function unpackContractFields(contract_abi, boc, allow_partial) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.unpackContractFields(retptr, ptr0, len0, ptr1, len1, allow_partial);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} contract_abi\n* @param {string} data\n* @returns {{ publicKey?: string, data: TokensObject }}\n*/\nexport function unpackInitData(contract_abi, data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.unpackInitData(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} boc\n* @returns {string}\n*/\nexport function getBocHash(boc) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.getBocHash(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        var ptr2 = r0;\n        var len2 = r1;\n        if (r3) {\n            ptr2 = 0; len2 = 0;\n            throw takeObject(r2);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred3_0, deferred3_1);\n    }\n}\n\n/**\n* @param {Array<AbiParam>} params\n* @param {TokensObject} tokens\n* @param {string | undefined} abi_version\n* @returns {{ hash: string, boc: string, }}\n*/\nexport function packIntoCell(params, tokens, abi_version) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = isLikeNone(abi_version) ? 0 : passStringToWasm0(abi_version, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.packIntoCell(retptr, addHeapObject(params), addHeapObject(tokens), ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Array<AbiParam>} params\n* @param {string} boc\n* @param {boolean} allow_partial\n* @param {string | undefined} abi_version\n* @returns {TokensObject}\n*/\nexport function unpackFromCell(params, boc, allow_partial, abi_version) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(abi_version) ? 0 : passStringToWasm0(abi_version, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.unpackFromCell(retptr, addHeapObject(params), ptr0, len0, allow_partial, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} boc\n* @returns {string | undefined}\n*/\nexport function extractContractData(boc) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.extractContractData(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        if (r3) {\n            throw takeObject(r2);\n        }\n        let v2;\n        if (r0 !== 0) {\n            v2 = getStringFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n        }\n        return v2;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} boc\n* @returns {string}\n*/\nexport function extractPublicKey(boc) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.extractPublicKey(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        var ptr2 = r0;\n        var len2 = r1;\n        if (r3) {\n            ptr2 = 0; len2 = 0;\n            throw takeObject(r2);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred3_0, deferred3_1);\n    }\n}\n\n/**\n* @param {string} code\n* @returns {{ hash: string, boc: string, }}\n*/\nexport function codeToTvc(code) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.codeToTvc(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} code\n* @param {string} data\n* @returns {{ hash: string, boc: string, }}\n*/\nexport function mergeTvc(code, data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.mergeTvc(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} tvc\n* @returns {StateInit}\n*/\nexport function splitTvc(tvc) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(tvc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.splitTvc(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} code\n* @param {string} salt\n* @returns {{ hash: string, boc: string, }}\n*/\nexport function setCodeSalt(code, salt) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(salt, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.setCodeSalt(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} code\n* @returns {string | undefined}\n*/\nexport function getCodeSalt(code) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.getCodeSalt(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        if (r3) {\n            throw takeObject(r2);\n        }\n        let v2;\n        if (r0 !== 0) {\n            v2 = getStringFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n        }\n        return v2;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} contract_abi\n* @param {string} method\n* @param {TokensObject} input\n* @returns {string}\n*/\nexport function encodeInternalInput(contract_abi, method, input) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(method, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.encodeInternalInput(retptr, ptr0, len0, ptr1, len1, addHeapObject(input));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        var ptr3 = r0;\n        var len3 = r1;\n        if (r3) {\n            ptr3 = 0; len3 = 0;\n            throw takeObject(r2);\n        }\n        deferred4_0 = ptr3;\n        deferred4_1 = len3;\n        return getStringFromWasm0(ptr3, len3);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred4_0, deferred4_1);\n    }\n}\n\n/**\n* @param {string | undefined} src\n* @param {string} dst\n* @param {boolean} bounce\n* @param {string | undefined} state_init\n* @param {string | undefined} body\n* @param {string} amount\n* @param {boolean | undefined} bounced\n* @returns {string}\n*/\nexport function encodeInternalMessage(src, dst, bounce, state_init, body, amount, bounced) {\n    let deferred7_0;\n    let deferred7_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = isLikeNone(src) ? 0 : passStringToWasm0(src, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(dst, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(state_init) ? 0 : passStringToWasm0(state_init, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        var ptr3 = isLikeNone(body) ? 0 : passStringToWasm0(body, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        const ptr4 = passStringToWasm0(amount, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len4 = WASM_VECTOR_LEN;\n        wasm.encodeInternalMessage(retptr, ptr0, len0, ptr1, len1, bounce, ptr2, len2, ptr3, len3, ptr4, len4, isLikeNone(bounced) ? 0xFFFFFF : bounced ? 1 : 0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        var ptr6 = r0;\n        var len6 = r1;\n        if (r3) {\n            ptr6 = 0; len6 = 0;\n            throw takeObject(r2);\n        }\n        deferred7_0 = ptr6;\n        deferred7_1 = len6;\n        return getStringFromWasm0(ptr6, len6);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred7_0, deferred7_1);\n    }\n}\n\n/**\n* @param {string} message_body\n* @param {string} contract_abi\n* @param {MethodName} method\n* @param {boolean} internal\n* @returns {DecodedInput | undefined}\n*/\nexport function decodeInput(message_body, contract_abi, method, internal) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(message_body, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.decodeInput(retptr, ptr0, len0, ptr1, len1, addHeapObject(method), internal);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} message_body\n* @param {string} contract_abi\n* @param {MethodName} event\n* @returns {DecodedEvent | undefined}\n*/\nexport function decodeEvent(message_body, contract_abi, event) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(message_body, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.decodeEvent(retptr, ptr0, len0, ptr1, len1, addHeapObject(event));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} message_body\n* @param {string} contract_abi\n* @param {MethodName} method\n* @returns {DecodedOutput | undefined}\n*/\nexport function decodeOutput(message_body, contract_abi, method) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(message_body, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.decodeOutput(retptr, ptr0, len0, ptr1, len1, addHeapObject(method));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Transaction} transaction\n* @param {string} contract_abi\n* @param {MethodName} method\n* @returns {DecodedTransaction | undefined}\n*/\nexport function decodeTransaction(transaction, contract_abi, method) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.decodeTransaction(retptr, addHeapObject(transaction), ptr0, len0, addHeapObject(method));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {Transaction} transaction\n* @param {string} contract_abi\n* @returns {DecodedTransactionEvents}\n*/\nexport function decodeTransactionEvents(transaction, contract_abi) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.decodeTransactionEvents(retptr, addHeapObject(transaction), ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} boc\n* @returns {TransactionTree}\n*/\nexport function unpackTransactionTree(boc) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(boc, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.unpackTransactionTree(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} data\n* @returns {string}\n*/\nexport function getDataHash(data) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.getDataHash(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        var ptr2 = r0;\n        var len2 = r1;\n        if (r3) {\n            ptr2 = 0; len2 = 0;\n            throw takeObject(r2);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred3_0, deferred3_1);\n    }\n}\n\n/**\n* @returns {Ed25519KeyPair}\n*/\nexport function ed25519_generateKeyPair() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.ed25519_generateKeyPair(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} secret_key\n* @param {string} data\n* @param {number | undefined} signature_id\n* @returns {string}\n*/\nexport function ed25519_sign(secret_key, data, signature_id) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(secret_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.ed25519_sign(retptr, ptr0, len0, ptr1, len1, !isLikeNone(signature_id), isLikeNone(signature_id) ? 0 : signature_id);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        var r3 = getInt32Memory0()[retptr / 4 + 3];\n        var ptr3 = r0;\n        var len3 = r1;\n        if (r3) {\n            ptr3 = 0; len3 = 0;\n            throw takeObject(r2);\n        }\n        deferred4_0 = ptr3;\n        deferred4_1 = len3;\n        return getStringFromWasm0(ptr3, len3);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred4_0, deferred4_1);\n    }\n}\n\n/**\n* @param {string} signature\n* @returns {ExtendedSignature}\n*/\nexport function extendSignature(signature) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(signature, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.extendSignature(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} public_key\n* @param {string} data\n* @param {string} signature\n* @param {number | undefined} signature_id\n* @returns {boolean}\n*/\nexport function verifySignature(public_key, data, signature, signature_id) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(signature, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        wasm.verifySignature(retptr, ptr0, len0, ptr1, len1, ptr2, len2, !isLikeNone(signature_id), isLikeNone(signature_id) ? 0 : signature_id);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return r0 !== 0;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {string} dst\n* @param {string | undefined} state_init\n* @param {string | undefined} body\n* @param {number} expire_at\n* @returns {SignedMessage}\n*/\nexport function createRawExternalMessage(dst, state_init, body, expire_at) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(dst, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(state_init) ? 0 : passStringToWasm0(state_init, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(body) ? 0 : passStringToWasm0(body, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        wasm.createRawExternalMessage(retptr, ptr0, len0, ptr1, len1, ptr2, len2, expire_at);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {ClockWithOffset} clock\n* @param {string} dst\n* @param {string} contract_abi\n* @param {string} method\n* @param {string | undefined} state_init\n* @param {TokensObject} input\n* @param {number} timeout\n* @returns {SignedMessage}\n*/\nexport function createExternalMessageWithoutSignature(clock, dst, contract_abi, method, state_init, input, timeout) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(clock, ClockWithOffset);\n        const ptr0 = passStringToWasm0(dst, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(method, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        var ptr3 = isLikeNone(state_init) ? 0 : passStringToWasm0(state_init, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        wasm.createExternalMessageWithoutSignature(retptr, clock.__wbg_ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, addHeapObject(input), timeout);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return takeObject(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {ClockWithOffset} clock\n* @param {string} dst\n* @param {string} contract_abi\n* @param {string} method\n* @param {string | undefined} state_init\n* @param {TokensObject} input\n* @param {string} public_key\n* @param {number} timeout\n* @returns {UnsignedMessage}\n*/\nexport function createExternalMessage(clock, dst, contract_abi, method, state_init, input, public_key, timeout) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        _assertClass(clock, ClockWithOffset);\n        const ptr0 = passStringToWasm0(dst, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(contract_abi, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(method, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        var ptr3 = isLikeNone(state_init) ? 0 : passStringToWasm0(state_init, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len3 = WASM_VECTOR_LEN;\n        const ptr4 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len4 = WASM_VECTOR_LEN;\n        wasm.createExternalMessage(retptr, clock.__wbg_ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, addHeapObject(input), ptr4, len4, timeout);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return UnsignedMessage.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\nfunction __wbg_adapter_171(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__h9bec1e94e3cdfbe9(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n*/\nexport class ClockWithOffset {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(ClockWithOffset.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_clockwithoffset_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.clockwithoffset_new();\n        return ClockWithOffset.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    get nowMs() {\n        const ret = wasm.clockwithoffset_nowMs(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @param {number} offset_ms\n    */\n    updateOffset(offset_ms) {\n        wasm.clockwithoffset_updateOffset(this.__wbg_ptr, offset_ms);\n    }\n    /**\n    * @returns {number}\n    */\n    offsetMs() {\n        const ret = wasm.clockwithoffset_offsetMs(this.__wbg_ptr);\n        return ret;\n    }\n}\n/**\n*/\nexport class GenericContract {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(GenericContract.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_genericcontract_free(ptr);\n    }\n    /**\n    * @returns {string}\n    */\n    get address() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.genericcontract_address(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1);\n        }\n    }\n    /**\n    * @param {SignedMessage} message\n    * @param {ExecutorParams | undefined} params\n    * @returns {Promise<Transaction>}\n    */\n    sendMessageLocally(message, params) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.genericcontract_sendMessageLocally(retptr, this.__wbg_ptr, addHeapObject(message), addHeapObject(params));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {SignedMessage} message\n    * @returns {Promise<PendingTransaction>}\n    */\n    sendMessage(message) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.genericcontract_sendMessage(retptr, this.__wbg_ptr, addHeapObject(message));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Promise<PollingMethod>}\n    */\n    refresh() {\n        const ret = wasm.genericcontract_refresh(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {string} block_id\n    * @returns {Promise<PollingMethod>}\n    */\n    handleBlock(block_id) {\n        const ptr0 = passStringToWasm0(block_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.genericcontract_handleBlock(this.__wbg_ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n    * @param {string} lt\n    * @returns {Promise<void>}\n    */\n    preloadTransactions(lt) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(lt, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.genericcontract_preloadTransactions(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {PollingMethod}\n    */\n    get pollingMethod() {\n        const ret = wasm.genericcontract_pollingMethod(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n/**\n*/\nexport class GqlConnection {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(GqlConnection.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_gqlconnection_free(ptr);\n    }\n    /**\n    * @param {ClockWithOffset} clock\n    * @param {IGqlSender} sender\n    */\n    constructor(clock, sender) {\n        _assertClass(clock, ClockWithOffset);\n        const ret = wasm.gqlconnection_new(clock.__wbg_ptr, addHeapObject(sender));\n        return GqlConnection.__wrap(ret);\n    }\n    /**\n    * @param {string} address\n    * @returns {Promise<LatestBlock>}\n    */\n    getLatestBlock(address) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.gqlconnection_getLatestBlock(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} current_block_id\n    * @param {string} address\n    * @param {number} timeout\n    * @returns {Promise<string>}\n    */\n    waitForNextBlock(current_block_id, address, timeout) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(current_block_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            const ptr1 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len1 = WASM_VECTOR_LEN;\n            wasm.gqlconnection_waitForNextBlock(retptr, this.__wbg_ptr, ptr0, len0, ptr1, len1, timeout);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class GqlQuery {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(GqlQuery.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_gqlquery_free(ptr);\n    }\n    /**\n    * @param {string} data\n    */\n    onReceive(data) {\n        const ptr = this.__destroy_into_raw();\n        const ptr0 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.gqlquery_onReceive(ptr, ptr0, len0);\n    }\n    /**\n    * @param {any} arg0\n    */\n    onError(arg0) {\n        const ptr = this.__destroy_into_raw();\n        wasm.gqlquery_onError(ptr, addHeapObject(arg0));\n    }\n    /**\n    */\n    onTimeout() {\n        const ptr = this.__destroy_into_raw();\n        wasm.gqlquery_onTimeout(ptr);\n    }\n}\n/**\n*/\nexport class JrpcConnection {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(JrpcConnection.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_jrpcconnection_free(ptr);\n    }\n    /**\n    * @param {ClockWithOffset} clock\n    * @param {any} sender\n    */\n    constructor(clock, sender) {\n        _assertClass(clock, ClockWithOffset);\n        const ret = wasm.gqlconnection_new(clock.__wbg_ptr, addHeapObject(sender));\n        return JrpcConnection.__wrap(ret);\n    }\n}\n/**\n*/\nexport class JrpcQuery {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(JrpcQuery.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_jrpcquery_free(ptr);\n    }\n    /**\n    * @param {string} data\n    */\n    onReceive(data) {\n        const ptr = this.__destroy_into_raw();\n        const ptr0 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.gqlquery_onReceive(ptr, ptr0, len0);\n    }\n    /**\n    * @param {any} arg0\n    */\n    onError(arg0) {\n        const ptr = this.__destroy_into_raw();\n        wasm.gqlquery_onError(ptr, addHeapObject(arg0));\n    }\n    /**\n    */\n    onTimeout() {\n        const ptr = this.__destroy_into_raw();\n        wasm.gqlquery_onTimeout(ptr);\n    }\n}\n/**\n*/\nexport class Transport {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Transport.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_transport_free(ptr);\n    }\n    /**\n    * @param {GqlConnection} gql\n    * @returns {Transport}\n    */\n    static fromGqlConnection(gql) {\n        _assertClass(gql, GqlConnection);\n        const ret = wasm.transport_fromGqlConnection(gql.__wbg_ptr);\n        return Transport.__wrap(ret);\n    }\n    /**\n    * @param {JrpcConnection} jrpc\n    * @returns {Transport}\n    */\n    static fromJrpcConnection(jrpc) {\n        _assertClass(jrpc, JrpcConnection);\n        const ret = wasm.transport_fromJrpcConnection(jrpc.__wbg_ptr);\n        return Transport.__wrap(ret);\n    }\n    /**\n    * @returns {Promise<NetworkDescription>}\n    */\n    getNetworkDescription() {\n        const ret = wasm.transport_getNetworkDescription(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Promise<number | undefined>}\n    */\n    getSignatureId() {\n        const ret = wasm.transport_getSignatureId(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {boolean | undefined} force\n    * @returns {Promise<string>}\n    */\n    getBlockchainConfig(force) {\n        const ret = wasm.transport_getBlockchainConfig(this.__wbg_ptr, isLikeNone(force) ? 0xFFFFFF : force ? 1 : 0);\n        return takeObject(ret);\n    }\n    /**\n    * @param {string} address\n    * @param {any} handler\n    * @returns {Promise<GenericContract>}\n    */\n    subscribeToGenericContract(address, handler) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.transport_subscribeToGenericContract(retptr, this.__wbg_ptr, ptr0, len0, addHeapObject(handler));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} address\n    * @returns {Promise<FullContractState | undefined>}\n    */\n    getFullContractState(address) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.transport_getFullContractState(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} code_hash\n    * @param {number} limit\n    * @param {string | undefined} continuation\n    * @returns {Promise<AccountsList>}\n    */\n    getAccountsByCodeHash(code_hash, limit, continuation) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(code_hash, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            var ptr1 = isLikeNone(continuation) ? 0 : passStringToWasm0(continuation, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len1 = WASM_VECTOR_LEN;\n            wasm.transport_getAccountsByCodeHash(retptr, this.__wbg_ptr, ptr0, len0, limit, ptr1, len1);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} address\n    * @param {string | undefined} continuation\n    * @param {number} limit\n    * @returns {Promise<TransactionsList>}\n    */\n    getTransactions(address, continuation, limit) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            var ptr1 = isLikeNone(continuation) ? 0 : passStringToWasm0(continuation, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len1 = WASM_VECTOR_LEN;\n            wasm.transport_getTransactions(retptr, this.__wbg_ptr, ptr0, len0, ptr1, len1, limit);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} hash\n    * @returns {Promise<Transaction | undefined>}\n    */\n    getTransaction(hash) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(hash, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.transport_getTransaction(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {string} message_hash\n    * @returns {Promise<Transaction | undefined>}\n    */\n    getDstTransaction(message_hash) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(message_hash, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.transport_getDstTransaction(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class UnsignedMessage {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(UnsignedMessage.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_unsignedmessage_free(ptr);\n    }\n    /**\n    * @param {ClockWithOffset} clock\n    */\n    refreshTimeout(clock) {\n        _assertClass(clock, ClockWithOffset);\n        wasm.unsignedmessage_refreshTimeout(this.__wbg_ptr, clock.__wbg_ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    expireAt() {\n        const ret = wasm.unsignedmessage_expireAt(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {string}\n    */\n    get hash() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.unsignedmessage_hash(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1);\n        }\n    }\n    /**\n    * @param {string} signature\n    * @returns {SignedMessage}\n    */\n    sign(signature) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(signature, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.unsignedmessage_sign(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {SignedMessage}\n    */\n    signFake() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.unsignedmessage_signFake(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_820c786973abdd8a = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_is_null = function(arg0) {\n        const ret = getObject(arg0) === null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_new_2b6fea4ea03b1b95 = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_87297f22973157c8 = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_0394642eae39db16 = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_push_109cfc26d02582dd = function(arg0, arg1) {\n        const ret = getObject(arg0).push(getObject(arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_genericcontract_new = function(arg0) {\n        const ret = GenericContract.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_now_c857fb0367c762cc = function() {\n        const ret = Date.now();\n        return ret;\n    };\n    imports.wbg.__wbg_onMessageSent_757373d6a862a07b = function(arg0, arg1, arg2) {\n        getObject(arg0).onMessageSent(takeObject(arg1), takeObject(arg2));\n    };\n    imports.wbg.__wbg_onMessageExpired_11fc606f8e92df5d = function(arg0, arg1) {\n        getObject(arg0).onMessageExpired(takeObject(arg1));\n    };\n    imports.wbg.__wbg_onStateChanged_ebb55988a24f850f = function(arg0, arg1) {\n        getObject(arg0).onStateChanged(takeObject(arg1));\n    };\n    imports.wbg.__wbg_onTransactionsFound_506d6112e4ede861 = function(arg0, arg1, arg2) {\n        getObject(arg0).onTransactionsFound(takeObject(arg1), takeObject(arg2));\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_keys_964fd67be8b2f724 = function(arg0) {\n        const ret = Object.keys(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_7303ed2ef026b2f5 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbg_isLocal_d4fc77f7ade8cfcf = function(arg0) {\n        const ret = getObject(arg0).isLocal();\n        return ret;\n    };\n    imports.wbg.__wbg_send_8081bb0b96786723 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).send(getStringFromWasm0(arg1, arg2), GqlQuery.__wrap(arg3), arg4 !== 0);\n    };\n    imports.wbg.__wbg_send_463856ee270e19ba = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).send(getStringFromWasm0(arg1, arg2), JrpcQuery.__wrap(arg3), arg4 !== 0);\n    };\n    imports.wbg.__wbg_stringify_d06ad2addc54d51e = function() { return handleError(function (arg0) {\n        const ret = JSON.stringify(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_2b55e405e4af4986 = function(arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = (arg0, arg1) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_171(a, state0.b, arg0, arg1);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            const ret = new Promise(cb0);\n            return addHeapObject(ret);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_crypto_70a96de3b6b73dac = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_process_dd1577445152112e = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_58036bec3add9e6f = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_6a9d28205ed5b0d8 = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_f05d779769764e82 = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_msCrypto_adbc770ec9eca9c7 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithlength_89eeca401d8918c2 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_f53c921291c381bd = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_self_742dd6eab3e9211e = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_c409e731db53a0e2 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_b70c095388441f2d = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_1c72617491ed7194 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_newnoargs_c9e6043b8ad84109 = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_557a2f2deacc4912 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_isArray_04e59fb73f78ab5b = function(arg0) {\n        const ret = Array.isArray(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_call_587b30eea3e09332 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_set_07da13cc24b69217 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_55ba7a6b1b92e2ac = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_88d1d8be5df94b9b = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_randomFillSync_e950366c42764a07 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_subarray_d82be056deb4ad27 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getRandomValues_3774744e221a22ad = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_new_09938a7d020f049b = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_3698e3ca519b3c3c = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_then_8df675b8bb5d5e3c = function(arg0, arg1) {\n        const ret = getObject(arg0).then(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_cb_drop = function(arg0) {\n        const obj = takeObject(arg0).original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        const ret = false;\n        return ret;\n    };\n    imports.wbg.__wbg_resolve_ae38ad63c43ff98b = function(arg0) {\n        const ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper5056 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 941, __wbg_adapter_34);\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedFloat64Memory0 = null;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('nekoton_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}