{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GiverAccount = void 0;\nconst utils_1 = require(\"../utils\");\n/**\n * Any account which supports Giver ABI (GiverV2, GiverV3):\n *\n * ```\n * {\n *   \"ABI version\": 2,\n *   \"header\": [\"pubkey\", \"time\", \"expire\"],\n *   \"functions\": [{\n *     \"name\": \"sendTransaction\",\n *     \"inputs\": [\n *       {\"name\":\"dest\",\"type\":\"address\"},\n *       {\"name\":\"value\",\"type\":\"uint128\"},\n *       {\"name\":\"bounce\",\"type\":\"bool\"},\n *     ],\n *     \"outputs\": []\n *   }],\n *   \"events\": []\n * }\n * ```\n *\n * @category AccountsStorage\n */\nclass GiverAccount {\n  static fromVersion(version) {\n    let address;\n    switch (version) {\n      case 2:\n        address = '0:ece57bcc6c530283becbbd8a3b24d3c5987cdddc3c8b7b33be6e4a6312490415';\n        break;\n      case 3:\n        address = '0:78fbd6980c10cf41401b32e9b51810415e7578b52403af80dae68ddf99714498';\n        break;\n      default:\n        throw new Error('Unknown version');\n    }\n    return new GiverAccount({\n      address,\n      publicKey: GiverAccount.GIVER_KEY_PAIR.publicKey\n    });\n  }\n  constructor(args) {\n    this.address = (0, utils_1.convertToAddressObject)(args.address);\n    this.publicKey = args.publicKey;\n  }\n  async fetchPublicKey(_ctx) {\n    return this.publicKey;\n  }\n  async prepareMessage(args, ctx) {\n    if (args.payload != null) {\n      throw new Error('Giver contract does not support payload in an internal message');\n    }\n    if (args.stateInit != null) {\n      throw new Error('Giver contract does not support state init in an internal message');\n    }\n    const signer = await ctx.getSigner(this.publicKey);\n    return await ctx.createExternalMessage({\n      address: this.address,\n      signer,\n      timeout: args.timeout,\n      abi: GIVER_ABI,\n      method: 'sendTransaction',\n      params: {\n        dest: args.recipient,\n        value: args.amount,\n        bounce: args.bounce\n      },\n      signatureId: args.signatureId\n    });\n  }\n}\nexports.GiverAccount = GiverAccount;\nGiverAccount.GIVER_KEY_PAIR = {\n  secretKey: '172af540e43a524763dd53b26a066d472a97c4de37d5498170564510608250c3',\n  publicKey: '2ada2e65ab8eeab09490e3521415f45b6e42df9c760a639bcf53957550b25a16'\n};\nconst GIVER_ABI = `{\n  \"ABI version\": 2,\n  \"header\": [\"time\", \"expire\"],\n  \"functions\": [{\n    \"name\": \"sendTransaction\",\n    \"inputs\": [\n      {\"name\":\"dest\",\"type\":\"address\"},\n      {\"name\":\"value\",\"type\":\"uint128\"},\n      {\"name\":\"bounce\",\"type\":\"bool\"}\n    ],\n    \"outputs\": []\n  }],\n  \"events\": []\n}`;","map":{"version":3,"names":["Object","defineProperty","exports","value","GiverAccount","utils_1","require","fromVersion","version","address","Error","publicKey","GIVER_KEY_PAIR","constructor","args","convertToAddressObject","fetchPublicKey","_ctx","prepareMessage","ctx","payload","stateInit","signer","getSigner","createExternalMessage","timeout","abi","GIVER_ABI","method","params","dest","recipient","amount","bounce","signatureId","secretKey"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/node_modules/everscale-standalone-client/client/AccountsStorage/Giver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GiverAccount = void 0;\nconst utils_1 = require(\"../utils\");\n/**\n * Any account which supports Giver ABI (GiverV2, GiverV3):\n *\n * ```\n * {\n *   \"ABI version\": 2,\n *   \"header\": [\"pubkey\", \"time\", \"expire\"],\n *   \"functions\": [{\n *     \"name\": \"sendTransaction\",\n *     \"inputs\": [\n *       {\"name\":\"dest\",\"type\":\"address\"},\n *       {\"name\":\"value\",\"type\":\"uint128\"},\n *       {\"name\":\"bounce\",\"type\":\"bool\"},\n *     ],\n *     \"outputs\": []\n *   }],\n *   \"events\": []\n * }\n * ```\n *\n * @category AccountsStorage\n */\nclass GiverAccount {\n    static fromVersion(version) {\n        let address;\n        switch (version) {\n            case 2:\n                address = '0:ece57bcc6c530283becbbd8a3b24d3c5987cdddc3c8b7b33be6e4a6312490415';\n                break;\n            case 3:\n                address = '0:78fbd6980c10cf41401b32e9b51810415e7578b52403af80dae68ddf99714498';\n                break;\n            default:\n                throw new Error('Unknown version');\n        }\n        return new GiverAccount({\n            address,\n            publicKey: GiverAccount.GIVER_KEY_PAIR.publicKey,\n        });\n    }\n    constructor(args) {\n        this.address = (0, utils_1.convertToAddressObject)(args.address);\n        this.publicKey = args.publicKey;\n    }\n    async fetchPublicKey(_ctx) {\n        return this.publicKey;\n    }\n    async prepareMessage(args, ctx) {\n        if (args.payload != null) {\n            throw new Error('Giver contract does not support payload in an internal message');\n        }\n        if (args.stateInit != null) {\n            throw new Error('Giver contract does not support state init in an internal message');\n        }\n        const signer = await ctx.getSigner(this.publicKey);\n        return await ctx.createExternalMessage({\n            address: this.address,\n            signer,\n            timeout: args.timeout,\n            abi: GIVER_ABI,\n            method: 'sendTransaction',\n            params: {\n                dest: args.recipient,\n                value: args.amount,\n                bounce: args.bounce,\n            },\n            signatureId: args.signatureId,\n        });\n    }\n}\nexports.GiverAccount = GiverAccount;\nGiverAccount.GIVER_KEY_PAIR = {\n    secretKey: '172af540e43a524763dd53b26a066d472a97c4de37d5498170564510608250c3',\n    publicKey: '2ada2e65ab8eeab09490e3521415f45b6e42df9c760a639bcf53957550b25a16',\n};\nconst GIVER_ABI = `{\n  \"ABI version\": 2,\n  \"header\": [\"time\", \"expire\"],\n  \"functions\": [{\n    \"name\": \"sendTransaction\",\n    \"inputs\": [\n      {\"name\":\"dest\",\"type\":\"address\"},\n      {\"name\":\"value\",\"type\":\"uint128\"},\n      {\"name\":\"bounce\",\"type\":\"bool\"}\n    ],\n    \"outputs\": []\n  }],\n  \"events\": []\n}`;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,YAAY,CAAC;EACf,OAAOG,WAAWA,CAACC,OAAO,EAAE;IACxB,IAAIC,OAAO;IACX,QAAQD,OAAO;MACX,KAAK,CAAC;QACFC,OAAO,GAAG,oEAAoE;QAC9E;MACJ,KAAK,CAAC;QACFA,OAAO,GAAG,oEAAoE;QAC9E;MACJ;QACI,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;IAC1C;IACA,OAAO,IAAIN,YAAY,CAAC;MACpBK,OAAO;MACPE,SAAS,EAAEP,YAAY,CAACQ,cAAc,CAACD;IAC3C,CAAC,CAAC;EACN;EACAE,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACL,OAAO,GAAG,CAAC,CAAC,EAAEJ,OAAO,CAACU,sBAAsB,EAAED,IAAI,CAACL,OAAO,CAAC;IAChE,IAAI,CAACE,SAAS,GAAGG,IAAI,CAACH,SAAS;EACnC;EACA,MAAMK,cAAcA,CAACC,IAAI,EAAE;IACvB,OAAO,IAAI,CAACN,SAAS;EACzB;EACA,MAAMO,cAAcA,CAACJ,IAAI,EAAEK,GAAG,EAAE;IAC5B,IAAIL,IAAI,CAACM,OAAO,IAAI,IAAI,EAAE;MACtB,MAAM,IAAIV,KAAK,CAAC,gEAAgE,CAAC;IACrF;IACA,IAAII,IAAI,CAACO,SAAS,IAAI,IAAI,EAAE;MACxB,MAAM,IAAIX,KAAK,CAAC,mEAAmE,CAAC;IACxF;IACA,MAAMY,MAAM,GAAG,MAAMH,GAAG,CAACI,SAAS,CAAC,IAAI,CAACZ,SAAS,CAAC;IAClD,OAAO,MAAMQ,GAAG,CAACK,qBAAqB,CAAC;MACnCf,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBa,MAAM;MACNG,OAAO,EAAEX,IAAI,CAACW,OAAO;MACrBC,GAAG,EAAEC,SAAS;MACdC,MAAM,EAAE,iBAAiB;MACzBC,MAAM,EAAE;QACJC,IAAI,EAAEhB,IAAI,CAACiB,SAAS;QACpB5B,KAAK,EAAEW,IAAI,CAACkB,MAAM;QAClBC,MAAM,EAAEnB,IAAI,CAACmB;MACjB,CAAC;MACDC,WAAW,EAAEpB,IAAI,CAACoB;IACtB,CAAC,CAAC;EACN;AACJ;AACAhC,OAAO,CAACE,YAAY,GAAGA,YAAY;AACnCA,YAAY,CAACQ,cAAc,GAAG;EAC1BuB,SAAS,EAAE,kEAAkE;EAC7ExB,SAAS,EAAE;AACf,CAAC;AACD,MAAMgB,SAAS,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}