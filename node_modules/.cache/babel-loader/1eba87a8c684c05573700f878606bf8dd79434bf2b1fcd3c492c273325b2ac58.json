{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JrpcSocket = void 0;\nconst core_1 = __importDefault(require(\"../../core\"));\nconst {\n  nekoton,\n  fetch,\n  fetchAgent\n} = core_1.default;\nclass JrpcSocket {\n  async connect(clock, params) {\n    class JrpcSender {\n      constructor(params) {\n        this.endpoint = params.endpoint;\n        this.endpointAgent = fetchAgent(this.endpoint);\n        this.alternativeEndpoint = params.alternativeEndpoint != null ? params.alternativeEndpoint : params.endpoint;\n        this.alternativeEndpointAgent = fetchAgent(this.alternativeEndpoint);\n      }\n      send(data, handler, requiresDb) {\n        (async () => {\n          try {\n            const url = requiresDb ? this.endpoint : this.alternativeEndpoint;\n            const agent = requiresDb ? this.endpointAgent : this.alternativeEndpointAgent;\n            const response = await fetch(url, {\n              method: 'post',\n              headers: DEFAULT_HEADERS,\n              body: data,\n              agent\n            }).then(response => response.text());\n            handler.onReceive(response);\n          } catch (e) {\n            handler.onError(e);\n          }\n        })();\n      }\n    }\n    return new nekoton.JrpcConnection(clock, new JrpcSender(params));\n  }\n}\nexports.JrpcSocket = JrpcSocket;\nconst DEFAULT_HEADERS = {\n  'Content-Type': 'application/json'\n};","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","JrpcSocket","core_1","require","nekoton","fetch","fetchAgent","default","connect","clock","params","JrpcSender","constructor","endpoint","endpointAgent","alternativeEndpoint","alternativeEndpointAgent","send","data","handler","requiresDb","url","agent","response","method","headers","DEFAULT_HEADERS","body","then","text","onReceive","e","onError","JrpcConnection"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/node_modules/everscale-standalone-client/client/ConnectionController/jrpc.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JrpcSocket = void 0;\nconst core_1 = __importDefault(require(\"../../core\"));\nconst { nekoton, fetch, fetchAgent } = core_1.default;\nclass JrpcSocket {\n    async connect(clock, params) {\n        class JrpcSender {\n            constructor(params) {\n                this.endpoint = params.endpoint;\n                this.endpointAgent = fetchAgent(this.endpoint);\n                this.alternativeEndpoint = params.alternativeEndpoint != null ? params.alternativeEndpoint : params.endpoint;\n                this.alternativeEndpointAgent = fetchAgent(this.alternativeEndpoint);\n            }\n            send(data, handler, requiresDb) {\n                (async () => {\n                    try {\n                        const url = requiresDb ? this.endpoint : this.alternativeEndpoint;\n                        const agent = requiresDb ? this.endpointAgent : this.alternativeEndpointAgent;\n                        const response = await fetch(url, {\n                            method: 'post',\n                            headers: DEFAULT_HEADERS,\n                            body: data,\n                            agent,\n                        }).then(response => response.text());\n                        handler.onReceive(response);\n                    }\n                    catch (e) {\n                        handler.onError(e);\n                    }\n                })();\n            }\n        }\n        return new nekoton.JrpcConnection(clock, new JrpcSender(params));\n    }\n}\nexports.JrpcSocket = JrpcSocket;\nconst DEFAULT_HEADERS = {\n    'Content-Type': 'application/json',\n};\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,MAAM,GAAGR,eAAe,CAACS,OAAO,CAAC,YAAY,CAAC,CAAC;AACrD,MAAM;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAW,CAAC,GAAGJ,MAAM,CAACK,OAAO;AACrD,MAAMN,UAAU,CAAC;EACb,MAAMO,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;IACzB,MAAMC,UAAU,CAAC;MACbC,WAAWA,CAACF,MAAM,EAAE;QAChB,IAAI,CAACG,QAAQ,GAAGH,MAAM,CAACG,QAAQ;QAC/B,IAAI,CAACC,aAAa,GAAGR,UAAU,CAAC,IAAI,CAACO,QAAQ,CAAC;QAC9C,IAAI,CAACE,mBAAmB,GAAGL,MAAM,CAACK,mBAAmB,IAAI,IAAI,GAAGL,MAAM,CAACK,mBAAmB,GAAGL,MAAM,CAACG,QAAQ;QAC5G,IAAI,CAACG,wBAAwB,GAAGV,UAAU,CAAC,IAAI,CAACS,mBAAmB,CAAC;MACxE;MACAE,IAAIA,CAACC,IAAI,EAAEC,OAAO,EAAEC,UAAU,EAAE;QAC5B,CAAC,YAAY;UACT,IAAI;YACA,MAAMC,GAAG,GAAGD,UAAU,GAAG,IAAI,CAACP,QAAQ,GAAG,IAAI,CAACE,mBAAmB;YACjE,MAAMO,KAAK,GAAGF,UAAU,GAAG,IAAI,CAACN,aAAa,GAAG,IAAI,CAACE,wBAAwB;YAC7E,MAAMO,QAAQ,GAAG,MAAMlB,KAAK,CAACgB,GAAG,EAAE;cAC9BG,MAAM,EAAE,MAAM;cACdC,OAAO,EAAEC,eAAe;cACxBC,IAAI,EAAET,IAAI;cACVI;YACJ,CAAC,CAAC,CAACM,IAAI,CAACL,QAAQ,IAAIA,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC;YACpCV,OAAO,CAACW,SAAS,CAACP,QAAQ,CAAC;UAC/B,CAAC,CACD,OAAOQ,CAAC,EAAE;YACNZ,OAAO,CAACa,OAAO,CAACD,CAAC,CAAC;UACtB;QACJ,CAAC,EAAE,CAAC;MACR;IACJ;IACA,OAAO,IAAI3B,OAAO,CAAC6B,cAAc,CAACxB,KAAK,EAAE,IAAIE,UAAU,CAACD,MAAM,CAAC,CAAC;EACpE;AACJ;AACAX,OAAO,CAACE,UAAU,GAAGA,UAAU;AAC/B,MAAMyB,eAAe,GAAG;EACpB,cAAc,EAAE;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}