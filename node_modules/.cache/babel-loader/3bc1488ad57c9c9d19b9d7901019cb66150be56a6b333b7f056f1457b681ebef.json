{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsigAccount = exports.GenericAccount = void 0;\nconst utils_1 = require(\"../utils\");\n/**\n * @category AccountsStorage\n */\nclass GenericAccount {\n  constructor(args) {\n    this.address = (0, utils_1.convertToAddressObject)(args.address);\n    this.abi = typeof args.abi === 'string' ? args.abi : JSON.stringify(args.abi);\n    this.prepareMessageImpl = args.prepareMessage;\n    this.publicKey = args.publicKey;\n  }\n  async fetchPublicKey(ctx) {\n    if (this.publicKey != null) {\n      return this.publicKey;\n    }\n    this.publicKey = await ctx.fetchPublicKey(this.address);\n    return this.publicKey;\n  }\n  async prepareMessage(args, ctx) {\n    const publicKey = await this.fetchPublicKey(ctx);\n    const signer = await ctx.getSigner(publicKey);\n    const {\n      method,\n      params,\n      stateInit\n    } = await this.prepareMessageImpl(args, ctx);\n    return ctx.createExternalMessage({\n      address: this.address,\n      signer,\n      timeout: args.timeout,\n      abi: this.abi,\n      method,\n      params,\n      stateInit,\n      signatureId: args.signatureId\n    });\n  }\n}\nexports.GenericAccount = GenericAccount;\n/**\n * @category AccountsStorage\n */\nclass MsigAccount extends GenericAccount {\n  constructor(args) {\n    const isNewMultisig = args.type === 'multisig2';\n    super({\n      address: args.address,\n      publicKey: args.publicKey,\n      abi: isNewMultisig ? MSIG2_ABI : MSIG_ABI,\n      prepareMessage: async (args, ctx) => {\n        if (!isNewMultisig && args.stateInit != null) {\n          throw new Error('Old multisig contract does not support state init in an internal message');\n        }\n        const payload = args.payload ? ctx.encodeInternalInput(args.payload) : '';\n        if (isNewMultisig && args.stateInit != null) {\n          return {\n            method: 'submitTransaction',\n            params: {\n              dest: args.recipient,\n              value: args.amount,\n              bounce: args.bounce,\n              allBalance: false,\n              payload,\n              stateInit: args.stateInit\n            }\n          };\n        } else {\n          return {\n            method: 'sendTransaction',\n            params: {\n              dest: args.recipient,\n              value: args.amount,\n              bounce: args.bounce,\n              flags: 3,\n              payload\n            }\n          };\n        }\n      }\n    });\n  }\n}\nexports.MsigAccount = MsigAccount;\nconst MSIG_ABI = `{\n  \"ABI version\": 2,\n  \"header\": [\"pubkey\", \"time\", \"expire\"],\n  \"functions\": [{\n    \"name\": \"sendTransaction\",\n    \"inputs\": [\n      {\"name\":\"dest\",\"type\":\"address\"},\n      {\"name\":\"value\",\"type\":\"uint128\"},\n      {\"name\":\"bounce\",\"type\":\"bool\"},\n      {\"name\":\"flags\",\"type\":\"uint8\"},\n      {\"name\":\"payload\",\"type\":\"cell\"}\n    ],\n    \"outputs\": []\n  }],\n  \"events\": []\n}`;\nconst MSIG2_ABI = `{\n  \"ABI version\": 2,\n  \"version\": \"2.3\",\n  \"header\": [\"pubkey\", \"time\", \"expire\"],\n  \"functions\": [{\n    \"name\": \"sendTransaction\",\n    \"inputs\": [\n      {\"name\":\"dest\",\"type\":\"address\"},\n      {\"name\":\"value\",\"type\":\"uint128\"},\n      {\"name\":\"bounce\",\"type\":\"bool\"},\n      {\"name\":\"flags\",\"type\":\"uint8\"},\n      {\"name\":\"payload\",\"type\":\"cell\"}\n    ],\n    \"outputs\": []\n  }, {\n    \"name\": \"submitTransaction\",\n    \"inputs\": [\n      {\"name\":\"dest\",\"type\":\"address\"},\n      {\"name\":\"value\",\"type\":\"uint128\"},\n      {\"name\":\"bounce\",\"type\":\"bool\"},\n      {\"name\":\"allBalance\",\"type\":\"bool\"},\n      {\"name\":\"payload\",\"type\":\"cell\"},\n      {\"name\":\"stateInit\",\"type\":\"optional(cell)\"}\n    ],\n    \"outputs\": []\n  }],\n  \"events\": []\n}`;","map":{"version":3,"names":["Object","defineProperty","exports","value","MsigAccount","GenericAccount","utils_1","require","constructor","args","address","convertToAddressObject","abi","JSON","stringify","prepareMessageImpl","prepareMessage","publicKey","fetchPublicKey","ctx","signer","getSigner","method","params","stateInit","createExternalMessage","timeout","signatureId","isNewMultisig","type","MSIG2_ABI","MSIG_ABI","Error","payload","encodeInternalInput","dest","recipient","amount","bounce","allBalance","flags"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/node_modules/everscale-standalone-client/client/AccountsStorage/Generic.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsigAccount = exports.GenericAccount = void 0;\nconst utils_1 = require(\"../utils\");\n/**\n * @category AccountsStorage\n */\nclass GenericAccount {\n    constructor(args) {\n        this.address = (0, utils_1.convertToAddressObject)(args.address);\n        this.abi = typeof args.abi === 'string' ? args.abi : JSON.stringify(args.abi);\n        this.prepareMessageImpl = args.prepareMessage;\n        this.publicKey = args.publicKey;\n    }\n    async fetchPublicKey(ctx) {\n        if (this.publicKey != null) {\n            return this.publicKey;\n        }\n        this.publicKey = await ctx.fetchPublicKey(this.address);\n        return this.publicKey;\n    }\n    async prepareMessage(args, ctx) {\n        const publicKey = await this.fetchPublicKey(ctx);\n        const signer = await ctx.getSigner(publicKey);\n        const { method, params, stateInit } = await this.prepareMessageImpl(args, ctx);\n        return ctx.createExternalMessage({\n            address: this.address,\n            signer,\n            timeout: args.timeout,\n            abi: this.abi,\n            method,\n            params,\n            stateInit,\n            signatureId: args.signatureId,\n        });\n    }\n}\nexports.GenericAccount = GenericAccount;\n/**\n * @category AccountsStorage\n */\nclass MsigAccount extends GenericAccount {\n    constructor(args) {\n        const isNewMultisig = args.type === 'multisig2';\n        super({\n            address: args.address,\n            publicKey: args.publicKey,\n            abi: isNewMultisig ? MSIG2_ABI : MSIG_ABI,\n            prepareMessage: async (args, ctx) => {\n                if (!isNewMultisig && args.stateInit != null) {\n                    throw new Error('Old multisig contract does not support state init in an internal message');\n                }\n                const payload = args.payload ? ctx.encodeInternalInput(args.payload) : '';\n                if (isNewMultisig && args.stateInit != null) {\n                    return {\n                        method: 'submitTransaction',\n                        params: {\n                            dest: args.recipient,\n                            value: args.amount,\n                            bounce: args.bounce,\n                            allBalance: false,\n                            payload,\n                            stateInit: args.stateInit,\n                        },\n                    };\n                }\n                else {\n                    return {\n                        method: 'sendTransaction',\n                        params: {\n                            dest: args.recipient,\n                            value: args.amount,\n                            bounce: args.bounce,\n                            flags: 3,\n                            payload,\n                        },\n                    };\n                }\n            },\n        });\n    }\n}\nexports.MsigAccount = MsigAccount;\nconst MSIG_ABI = `{\n  \"ABI version\": 2,\n  \"header\": [\"pubkey\", \"time\", \"expire\"],\n  \"functions\": [{\n    \"name\": \"sendTransaction\",\n    \"inputs\": [\n      {\"name\":\"dest\",\"type\":\"address\"},\n      {\"name\":\"value\",\"type\":\"uint128\"},\n      {\"name\":\"bounce\",\"type\":\"bool\"},\n      {\"name\":\"flags\",\"type\":\"uint8\"},\n      {\"name\":\"payload\",\"type\":\"cell\"}\n    ],\n    \"outputs\": []\n  }],\n  \"events\": []\n}`;\nconst MSIG2_ABI = `{\n  \"ABI version\": 2,\n  \"version\": \"2.3\",\n  \"header\": [\"pubkey\", \"time\", \"expire\"],\n  \"functions\": [{\n    \"name\": \"sendTransaction\",\n    \"inputs\": [\n      {\"name\":\"dest\",\"type\":\"address\"},\n      {\"name\":\"value\",\"type\":\"uint128\"},\n      {\"name\":\"bounce\",\"type\":\"bool\"},\n      {\"name\":\"flags\",\"type\":\"uint8\"},\n      {\"name\":\"payload\",\"type\":\"cell\"}\n    ],\n    \"outputs\": []\n  }, {\n    \"name\": \"submitTransaction\",\n    \"inputs\": [\n      {\"name\":\"dest\",\"type\":\"address\"},\n      {\"name\":\"value\",\"type\":\"uint128\"},\n      {\"name\":\"bounce\",\"type\":\"bool\"},\n      {\"name\":\"allBalance\",\"type\":\"bool\"},\n      {\"name\":\"payload\",\"type\":\"cell\"},\n      {\"name\":\"stateInit\",\"type\":\"optional(cell)\"}\n    ],\n    \"outputs\": []\n  }],\n  \"events\": []\n}`;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}