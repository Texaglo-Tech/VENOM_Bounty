{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimpleKeystore = void 0;\nconst core_1 = __importDefault(require(\"../core\"));\nconst {\n  nekoton\n} = core_1.default;\n/**\n * @category Keystore\n */\nclass SimpleKeystore {\n  constructor() {\n    let entries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.signers = new Map();\n    this.signersByPublicKey = new Map();\n    for (const [id, signer] of Object.entries(entries)) {\n      this.addKeyPair(id, signer);\n    }\n  }\n  static generateKeyPair() {\n    return nekoton.ed25519_generateKeyPair();\n  }\n  addKeyPair(idOrKeypair, rest) {\n    let id;\n    let keyPair;\n    if (typeof idOrKeypair == 'string') {\n      id = idOrKeypair;\n      keyPair = rest;\n    } else {\n      id = idOrKeypair.publicKey;\n      keyPair = idOrKeypair;\n    }\n    const signer = new SimpleSigner(keyPair);\n    this.signers.set(id, signer);\n    this.signersByPublicKey.set(keyPair.publicKey, signer);\n  }\n  removeKeyPair(id) {\n    const signer = this.signers.get(id);\n    if (signer != null) {\n      this.signers.delete(id);\n      this.signersByPublicKey.delete(signer.publicKey);\n    }\n  }\n  /**\n   * Generate and add a new key\n   *\n   * @returns keyId of the new signer\n   */\n  async withNewKey(f) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const newKey = SimpleKeystore.generateKeyPair();\n    const keyId = options.keyId != null ? options.keyId : newKey.publicKey;\n    const keepOnError = options.keepOnError || false;\n    this.addKeyPair(keyId, newKey);\n    return f(keyId).then(retain => {\n      if (retain === false) {\n        this.removeKeyPair(keyId);\n      }\n      return keyId;\n    }).catch(e => {\n      if (!keepOnError) {\n        this.removeKeyPair(keyId);\n      }\n      throw e;\n    });\n  }\n  async getSigner(id) {\n    return this.signers.get(id) || this.signersByPublicKey.get(id);\n  }\n}\nexports.SimpleKeystore = SimpleKeystore;\nclass SimpleSigner {\n  constructor(keyPair) {\n    this.keyPair = keyPair;\n    this.publicKey = this.keyPair.publicKey;\n  }\n  async sign(rawData, signatureId) {\n    return nekoton.ed25519_sign(this.keyPair.secretKey, rawData, signatureId);\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","SimpleKeystore","core_1","require","nekoton","default","constructor","entries","arguments","length","undefined","signers","Map","signersByPublicKey","id","signer","addKeyPair","generateKeyPair","ed25519_generateKeyPair","idOrKeypair","rest","keyPair","publicKey","SimpleSigner","set","removeKeyPair","get","delete","withNewKey","f","options","newKey","keyId","keepOnError","then","retain","catch","e","getSigner","sign","rawData","signatureId","ed25519_sign","secretKey"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/node_modules/everscale-standalone-client/client/keystore.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleKeystore = void 0;\nconst core_1 = __importDefault(require(\"../core\"));\nconst { nekoton } = core_1.default;\n/**\n * @category Keystore\n */\nclass SimpleKeystore {\n    constructor(entries = {}) {\n        this.signers = new Map();\n        this.signersByPublicKey = new Map();\n        for (const [id, signer] of Object.entries(entries)) {\n            this.addKeyPair(id, signer);\n        }\n    }\n    static generateKeyPair() {\n        return nekoton.ed25519_generateKeyPair();\n    }\n    addKeyPair(idOrKeypair, rest) {\n        let id;\n        let keyPair;\n        if (typeof idOrKeypair == 'string') {\n            id = idOrKeypair;\n            keyPair = rest;\n        }\n        else {\n            id = idOrKeypair.publicKey;\n            keyPair = idOrKeypair;\n        }\n        const signer = new SimpleSigner(keyPair);\n        this.signers.set(id, signer);\n        this.signersByPublicKey.set(keyPair.publicKey, signer);\n    }\n    removeKeyPair(id) {\n        const signer = this.signers.get(id);\n        if (signer != null) {\n            this.signers.delete(id);\n            this.signersByPublicKey.delete(signer.publicKey);\n        }\n    }\n    /**\n     * Generate and add a new key\n     *\n     * @returns keyId of the new signer\n     */\n    async withNewKey(f, options = {}) {\n        const newKey = SimpleKeystore.generateKeyPair();\n        const keyId = options.keyId != null ? options.keyId : newKey.publicKey;\n        const keepOnError = options.keepOnError || false;\n        this.addKeyPair(keyId, newKey);\n        return f(keyId)\n            .then(retain => {\n            if (retain === false) {\n                this.removeKeyPair(keyId);\n            }\n            return keyId;\n        })\n            .catch((e) => {\n            if (!keepOnError) {\n                this.removeKeyPair(keyId);\n            }\n            throw e;\n        });\n    }\n    async getSigner(id) {\n        return this.signers.get(id) || this.signersByPublicKey.get(id);\n    }\n}\nexports.SimpleKeystore = SimpleKeystore;\nclass SimpleSigner {\n    constructor(keyPair) {\n        this.keyPair = keyPair;\n        this.publicKey = this.keyPair.publicKey;\n    }\n    async sign(rawData, signatureId) {\n        return nekoton.ed25519_sign(this.keyPair.secretKey, rawData, signatureId);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}