{"ast":null,"code":"var _jsxFileName = \"/home/king/Desktop/venom-connect-main/examples/react/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { ProviderRpcClient } from \"everscale-inpage-provider\";\nimport { EverscaleStandaloneClient } from \"everscale-standalone-client\";\nimport { useEffect, useState } from \"react\";\nimport { VenomConnect } from \"venom-connect\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport { Box, Button, Container, Grid, Typography, TextField } from \"@mui/material\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initTheme = \"light\";\nconst standaloneFallback = () => EverscaleStandaloneClient.create({\n  connection: {\n    id: 1000,\n    group: \"venom_testnet\",\n    type: \"jrpc\",\n    data: {\n      endpoint: \"https://jrpc.venom.foundation/rpc\"\n    }\n  }\n});\nconst initVenomConnect = async () => {\n  return new VenomConnect({\n    theme: initTheme,\n    checkNetworkId: 1000,\n    providersOptions: {\n      venomwallet: {\n        links: {},\n        walletWaysToConnect: [{\n          package: ProviderRpcClient,\n          packageOptions: {\n            fallback: VenomConnect.getPromise(\"venomwallet\", \"extension\") || (() => Promise.reject()),\n            forceUseFallback: true\n          },\n          packageOptionsStandalone: {\n            fallback: standaloneFallback,\n            forceUseFallback: true\n          },\n          id: \"extension\",\n          type: \"extension\"\n        }],\n        defaultWalletWaysToConnect: [\"mobile\", \"ios\", \"android\"]\n      }\n    }\n  });\n};\nconst App = () => {\n  _s();\n  const [venomConnect, setVenomConnect] = useState();\n  const [venomProvider, setVenomProvider] = useState();\n  const [address, setAddress] = useState();\n  const [balance, setBalance] = useState();\n  const [theme, setTheme] = useState(initTheme);\n  const [info, setInfo] = useState(\"\");\n  const [standaloneMethodsIsFetching, setStandaloneMethodsIsFetching] = useState(false);\n  const [githubToken, setGithubToken] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [githubIssue, setGithubIssue] = useState(\"\");\n  const [isPostPage, setIsPostPage] = useState(false); // add this state\n\n  const handleGithubTokenChange = event => {\n    setGithubToken(event.target.value);\n  };\n  const handleUserIdChange = event => {\n    setUserId(event.target.value);\n  };\n  const handleGithubIssueChange = event => {\n    setGithubIssue(event.target.value);\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const oracleApi = \"http://20.169.154.128:8000/\";\n    try {\n      const response = await axios.post(oracleApi, {\n        user_id: userId,\n        url_input: githubIssue,\n        task_index: 0\n      }, {\n        headers: {\n          \"access_token\": githubToken,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getAddress = async provider => {\n    var _provider$getProvider, _providerState$permis;\n    const providerState = await (provider === null || provider === void 0 ? void 0 : (_provider$getProvider = provider.getProviderState) === null || _provider$getProvider === void 0 ? void 0 : _provider$getProvider.call(provider));\n    const address = providerState === null || providerState === void 0 ? void 0 : (_providerState$permis = providerState.permissions.accountInteraction) === null || _providerState$permis === void 0 ? void 0 : _providerState$permis.address.toString();\n    return address;\n  };\n  const getBalance = async (provider, _address) => {\n    try {\n      var _provider$getBalance;\n      const providerBalance = await (provider === null || provider === void 0 ? void 0 : (_provider$getBalance = provider.getBalance) === null || _provider$getBalance === void 0 ? void 0 : _provider$getBalance.call(provider, _address));\n      return providerBalance;\n    } catch (error) {\n      return undefined;\n    }\n  };\n  const checkAuth = async _venomConnect => {\n    const auth = await (_venomConnect === null || _venomConnect === void 0 ? void 0 : _venomConnect.checkAuth());\n    if (auth) await getAddress(_venomConnect);\n  };\n  const onInitButtonClick = async () => {\n    const initedVenomConnect = await initVenomConnect();\n    setVenomConnect(initedVenomConnect);\n    await checkAuth(initedVenomConnect);\n  };\n  const onConnectButtonClick = async () => {\n    venomConnect === null || venomConnect === void 0 ? void 0 : venomConnect.connect();\n  };\n  const onDisconnectButtonClick = async () => {\n    venomProvider === null || venomProvider === void 0 ? void 0 : venomProvider.disconnect();\n  };\n  const check = async _provider => {\n    const _address = _provider ? await getAddress(_provider) : undefined;\n    const _balance = _provider && _address ? await getBalance(_provider, _address) : undefined;\n    setAddress(_address);\n    setBalance(_balance);\n    if (_provider && _address) setTimeout(() => {\n      check(_provider);\n    }, 7000);\n  };\n  const onConnect = async provider => {\n    setVenomProvider(provider);\n    check(provider);\n  };\n  useEffect(() => {\n    const off = venomConnect === null || venomConnect === void 0 ? void 0 : venomConnect.on(\"connect\", onConnect);\n    return () => {\n      off === null || off === void 0 ? void 0 : off();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [venomConnect]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      my: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          component: \"h1\",\n          textAlign: \"center\",\n          children: \"Bounty Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [!venomConnect && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gap: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: onInitButtonClick,\n              children: \"Connect to Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), venomConnect && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        gap: 6,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleFormSubmit,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              alignItems: \"center\",\n              gap: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"GitHub Token\",\n                  variant: \"outlined\",\n                  value: githubToken,\n                  onChange: handleGithubTokenChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"User ID\",\n                  variant: \"outlined\",\n                  value: userId,\n                  onChange: handleUserIdChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"GitHub Issue URL\",\n                  variant: \"outlined\",\n                  value: githubIssue,\n                  onChange: handleGithubIssueChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            direction: \"column\",\n            gap: 2,\n            children: [isPostPage &&\n            /*#__PURE__*/\n            // only show if user is on the post page\n            _jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: onDisconnectButtonClick,\n              children: \"Disconnect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Account address: \", address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Account balance: \", balance]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"0UemZhiQGEM7YjpkHU3XOsrecTg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ProviderRpcClient","EverscaleStandaloneClient","useEffect","useState","VenomConnect","Box","Button","Container","Grid","Typography","TextField","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","initTheme","standaloneFallback","create","connection","id","group","type","data","endpoint","initVenomConnect","theme","checkNetworkId","providersOptions","venomwallet","links","walletWaysToConnect","package","packageOptions","fallback","getPromise","Promise","reject","forceUseFallback","packageOptionsStandalone","defaultWalletWaysToConnect","App","_s","venomConnect","setVenomConnect","venomProvider","setVenomProvider","address","setAddress","balance","setBalance","setTheme","info","setInfo","standaloneMethodsIsFetching","setStandaloneMethodsIsFetching","githubToken","setGithubToken","userId","setUserId","githubIssue","setGithubIssue","isPostPage","setIsPostPage","handleGithubTokenChange","event","target","value","handleUserIdChange","handleGithubIssueChange","handleFormSubmit","preventDefault","oracleApi","response","post","user_id","url_input","task_index","headers","console","log","error","getAddress","provider","_provider$getProvider","_providerState$permis","providerState","getProviderState","call","permissions","accountInteraction","toString","getBalance","_address","_provider$getBalance","providerBalance","undefined","checkAuth","_venomConnect","auth","onInitButtonClick","initedVenomConnect","onConnectButtonClick","connect","onDisconnectButtonClick","disconnect","check","_provider","_balance","setTimeout","onConnect","off","on","children","container","justifyContent","my","item","variant","component","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","gap","onClick","direction","onSubmit","label","onChange","_c","$RefreshReg$"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/src/App.tsx"],"sourcesContent":["import { Address, ProviderRpcClient } from \"everscale-inpage-provider\";\nimport { EverscaleStandaloneClient } from \"everscale-standalone-client\";\nimport { useEffect, useState } from \"react\";\nimport { VenomConnect } from \"venom-connect\";\nimport testContractAbi from \"./abi/test.abi.json\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport { Box, Button, Container, Divider, Grid, Typography, TextField } from \"@mui/material\";\nimport axios from 'axios';\n\nconst initTheme = \"light\" as const;\n\nconst standaloneFallback = () => EverscaleStandaloneClient.create({\n    connection: {\n        id: 1000,\n        group: \"venom_testnet\",\n        type: \"jrpc\",\n        data: {\n            endpoint: \"https://jrpc.venom.foundation/rpc\",\n        },\n    },\n});\n\nconst initVenomConnect = async () => {\n    return new VenomConnect({\n        theme: initTheme,\n        checkNetworkId: 1000,\n        providersOptions: {\n            venomwallet: {\n                links: {},\n                walletWaysToConnect: [\n                    {\n                        package: ProviderRpcClient,\n                        packageOptions: {\n                            fallback:\n                                VenomConnect.getPromise(\"venomwallet\", \"extension\") ||\n                                (() => Promise.reject()),\n                            forceUseFallback: true,\n                        },\n                        packageOptionsStandalone: {\n                            fallback: standaloneFallback,\n                            forceUseFallback: true,\n                        },\n                        id: \"extension\",\n                        type: \"extension\",\n                    },\n                ],\n                defaultWalletWaysToConnect: [\n                    \"mobile\",\n                    \"ios\",\n                    \"android\",\n                ],\n            },\n        },\n    });\n};\n\nconst App = () => {\n    const [venomConnect, setVenomConnect] = useState<any>();\n    const [venomProvider, setVenomProvider] = useState<any>();\n    const [address, setAddress] = useState();\n    const [balance, setBalance] = useState();\n    const [theme, setTheme] = useState(initTheme);\n    const [info, setInfo] = useState(\"\");\n    const [standaloneMethodsIsFetching, setStandaloneMethodsIsFetching] =\n        useState(false);\n    const [githubToken, setGithubToken] = useState(\"\");\n    const [userId, setUserId] = useState(\"\");\n    const [githubIssue, setGithubIssue] = useState(\"\");\n    const [isPostPage, setIsPostPage] = useState(false); // add this state\n\n    const handleGithubTokenChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setGithubToken(event.target.value);\n    };\n\n    const handleUserIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setUserId(event.target.value);\n    };\n\n    const handleGithubIssueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setGithubIssue(event.target.value);\n    };\n\n    const handleFormSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        const oracleApi = \"http://20.169.154.128:8000/\";\n\n        try {\n            const response = await axios.post(oracleApi, {\n                user_id: userId,\n                url_input: githubIssue,\n                task_index: 0\n            }, {\n                headers: {\n                    \"access_token\": githubToken,\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n\n            console.log(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const getAddress = async (provider: any) => {\n        const providerState = await provider?.getProviderState?.();\n        const address =\n            providerState?.permissions.accountInteraction?.address.toString();\n        return address;\n    };\n\n    const getBalance = async (provider: any, _address: string) => {\n        try {\n            const providerBalance = await provider?.getBalance?.(_address);\n            return providerBalance;\n        } catch (error) {\n            return undefined;\n        }\n    };\n\n    const checkAuth = async (_venomConnect: any) => {\n        const auth = await _venomConnect?.checkAuth();\n        if (auth) await getAddress(_venomConnect);\n    };\n\n    const onInitButtonClick = async () => {\n        const initedVenomConnect = await initVenomConnect();\n        setVenomConnect(initedVenomConnect);\n        await checkAuth(initedVenomConnect);\n    };\n\n    const onConnectButtonClick = async () => {\n        venomConnect?.connect();\n    };\n\n    const onDisconnectButtonClick = async () => {\n        venomProvider?.disconnect();\n    };\n\n    const check = async (_provider: any) => {\n        const _address = _provider ? await getAddress(_provider) : undefined;\n        const _balance =\n            _provider && _address ? await getBalance(_provider, _address) : undefined;\n\n        setAddress(_address);\n        setBalance(_balance);\n\n        if (_provider && _address)\n            setTimeout(() => {\n                check(_provider);\n            }, 7000);\n    };\n\n    const onConnect = async (provider: any) => {\n        setVenomProvider(provider);\n\n        check(provider);\n    };\n\n    useEffect(() => {\n        const off = venomConnect?.on(\"connect\", onConnect);\n\n        return () => {\n            off?.();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [venomConnect]);\n\n    return (\n        <Box>\n            <Grid container justifyContent=\"center\" my={4}>\n                <Grid item>\n                    <Typography variant=\"h1\" component=\"h1\" textAlign=\"center\">\n                        Bounty Board\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Container>\n                {!venomConnect && (\n                    <Grid\n                        container\n                        justifyContent={\"center\"}\n                        alignItems={\"center\"}\n                        gap={2}\n                    >\n                        <Grid item>\n                            <>\n                                <Button variant=\"contained\" onClick={onInitButtonClick}>\n                                    Connect to Post\n                                </Button>\n                            </>\n                        </Grid>\n                    </Grid>\n                )}\n                {venomConnect && (\n                    <Grid container direction={\"column\"} gap={6}>\n                        <Grid item>\n                            <form onSubmit={handleFormSubmit}>\n                                <Grid\n                                    container\n                                    direction={\"column\"}\n                                    alignItems={\"center\"}\n                                    gap={2}\n                                >\n                                    <Grid item>\n                                        <TextField\n                                            label=\"GitHub Token\"\n                                            variant=\"outlined\"\n                                            value={githubToken}\n                                            onChange={handleGithubTokenChange}\n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <TextField\n                                            label=\"User ID\"\n                                            variant=\"outlined\"\n                                            value={userId}\n                                            onChange={handleUserIdChange}\n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <TextField\n                                            label=\"GitHub Issue URL\"\n                                            variant=\"outlined\"\n                                            value={githubIssue}\n                                            onChange={handleGithubIssueChange}\n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <Button variant=\"contained\" type=\"submit\">\n                                            Submit\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Grid>\n                        <Grid item>\n                            <Grid\n                                container\n                                justifyContent=\"center\"\n                                alignItems=\"center\"\n                                direction=\"column\"\n                                gap={2}\n                            >\n                                {isPostPage && (  // only show if user is on the post page\n                                    <Button variant=\"contained\" onClick={onDisconnectButtonClick}>\n                                        Disconnect Wallet\n                                    </Button>\n                                )}\n                                <Grid item>\n                                    <Typography>\n                                        Account address: {address}\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography>\n                                        Account balance: {balance}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                )}\n            </Container>\n        </Box>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}