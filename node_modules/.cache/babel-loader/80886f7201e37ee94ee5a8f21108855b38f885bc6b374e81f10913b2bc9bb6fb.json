{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EverWalletAccount = void 0;\nconst everscale_inpage_provider_1 = require(\"everscale-inpage-provider\");\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst core_1 = __importDefault(require(\"../../core\"));\nconst {\n  ensureNekotonLoaded,\n  nekoton\n} = core_1.default;\n/**\n * @category AccountsStorage\n */\nclass EverWalletAccount {\n  static async computeAddress(args) {\n    // TODO: Somehow propagate init params\n    await ensureNekotonLoaded();\n    const publicKey = args.publicKey instanceof bignumber_js_1.default ? args.publicKey : new bignumber_js_1.default(`0x${args.publicKey}`);\n    const hash = makeStateInit(publicKey, args.nonce).hash;\n    return new everscale_inpage_provider_1.Address(`${args.workchain != null ? args.workchain : 0}:${hash}`);\n  }\n  static async fromPubkey(args) {\n    const publicKey = new bignumber_js_1.default(`0x${args.publicKey}`);\n    const address = await EverWalletAccount.computeAddress({\n      publicKey,\n      workchain: args.workchain,\n      nonce: args.nonce\n    });\n    const result = new EverWalletAccount(address);\n    result.publicKey = publicKey;\n    result.nonce = args.nonce;\n    return result;\n  }\n  constructor(address) {\n    this.address = address;\n  }\n  async fetchPublicKey(ctx) {\n    let publicKey = this.publicKey;\n    if (publicKey == null) {\n      publicKey = this.publicKey = await ctx.fetchPublicKey(this.address).then(publicKey => new bignumber_js_1.default(`0x${publicKey}`));\n      this.isDeployed = true;\n    }\n    return publicKey.toString(16).padStart(64, '0');\n  }\n  async prepareMessage(args, ctx) {\n    const {\n      publicKey,\n      stateInit\n    } = await this.fetchState(ctx);\n    const signer = await ctx.getSigner(publicKey);\n    const payload = args.payload ? ctx.encodeInternalInput(args.payload) : '';\n    let abi;\n    let method;\n    let params;\n    if (args.stateInit == null) {\n      abi = EVER_WALLET_ABI;\n      method = 'sendTransaction';\n      params = {\n        dest: args.recipient,\n        value: args.amount,\n        bounce: args.bounce,\n        flags: 3,\n        payload\n      };\n    } else {\n      abi = EVER_WALLET_ABI_RAW;\n      method = 'sendTransactionRaw';\n      params = {\n        flags: 3,\n        message: ctx.encodeInternalMessage({\n          dst: args.recipient,\n          bounce: args.bounce,\n          stateInit: args.stateInit,\n          body: payload,\n          amount: args.amount\n        })\n      };\n    }\n    return ctx.createExternalMessage({\n      address: this.address,\n      signer,\n      timeout: args.timeout,\n      abi,\n      method,\n      params,\n      stateInit,\n      signatureId: args.signatureId\n    });\n  }\n  async fetchState(ctx) {\n    let stateInit = undefined;\n    let publicKey;\n    if (this.isDeployed === true && this.publicKey != null) {\n      publicKey = this.publicKey;\n    } else {\n      const state = await ctx.getFullContractState(this.address);\n      if (state == null || !state.isDeployed) {\n        if (this.publicKey == null) {\n          throw new Error('Contract not deployed and public key was not specified');\n        }\n        stateInit = makeStateInit(this.publicKey, this.nonce).boc;\n        publicKey = this.publicKey;\n      } else {\n        this.isDeployed = true;\n        publicKey = new bignumber_js_1.default(`0x${nekoton.extractPublicKey(state.boc)}`);\n      }\n      if (this.publicKey == null) {\n        this.publicKey = publicKey;\n      }\n    }\n    return {\n      publicKey: publicKey.toString(16).padStart(64, '0'),\n      stateInit\n    };\n  }\n}\nexports.EverWalletAccount = EverWalletAccount;\nconst makeStateInit = (publicKey, nonce) => {\n  let params, tokens;\n  if (nonce != null) {\n    params = DATA_STRUCTURE_EXT;\n    tokens = {\n      publicKey: publicKey.toFixed(0),\n      timestamp: 0,\n      nonce\n    };\n  } else {\n    params = DATA_STRUCTURE;\n    tokens = {\n      publicKey: publicKey.toFixed(0),\n      timestamp: 0\n    };\n  }\n  const data = nekoton.packIntoCell(params, tokens).boc;\n  return nekoton.mergeTvc(EVER_WALLET_CODE, data);\n};\nconst DATA_STRUCTURE = [{\n  name: 'publicKey',\n  type: 'uint256'\n}, {\n  name: 'timestamp',\n  type: 'uint64'\n}];\nconst DATA_STRUCTURE_EXT = [{\n  name: 'publicKey',\n  type: 'uint256'\n}, {\n  name: 'timestamp',\n  type: 'uint64'\n}, {\n  name: 'nonce',\n  type: 'uint32'\n}];\nconst EVER_WALLET_CODE = 'te6cckEBBgEA/AABFP8A9KQT9LzyyAsBAgEgAgMABNIwAubycdcBAcAA8nqDCNcY7UTQgwfXAdcLP8j4KM8WI88WyfkAA3HXAQHDAJqDB9cBURO68uBk3oBA1wGAINcBgCDXAVQWdfkQ8qj4I7vyeWa++COBBwiggQPoqFIgvLHydAIgghBM7mRsuuMPAcjL/8s/ye1UBAUAmDAC10zQ+kCDBtcBcdcBeNcB10z4AHCAEASqAhSxyMsFUAXPFlAD+gLLaSLQIc8xIddJoIQJuZgzcAHLAFjPFpcwcQHLABLM4skB+wAAPoIQFp4+EbqOEfgAApMg10qXeNcB1AL7AOjRkzLyPOI+zYS/';\nconst EVER_WALLET_ABI = `{\n  \"ABI version\": 2,\n  \"version\": \"2.3\",\n  \"header\": [\"pubkey\", \"time\", \"expire\"],\n  \"functions\": [{\n    \"name\": \"sendTransaction\",\n    \"inputs\": [\n      {\"name\":\"dest\",\"type\":\"address\"},\n      {\"name\":\"value\",\"type\":\"uint128\"},\n      {\"name\":\"bounce\",\"type\":\"bool\"},\n      {\"name\":\"flags\",\"type\":\"uint8\"},\n      {\"name\":\"payload\",\"type\":\"cell\"}\n    ],\n    \"outputs\": []\n  }],\n  \"events\": []\n}`;\nconst EVER_WALLET_ABI_RAW = `{\n  \"ABI version\": 2,\n  \"version\": \"2.3\",\n  \"header\": [\"pubkey\", \"time\", \"expire\"],\n  \"functions\": [{\n    \"name\": \"sendTransactionRaw\",\n    \"inputs\": [\n      {\"name\":\"flags\",\"type\":\"uint8\"},\n      {\"name\":\"message\",\"type\":\"cell\"}\n    ],\n    \"outputs\": [],\n    \"id\": \"0x169e3e11\"\n  }],\n  \"events\": []\n}`;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","EverWalletAccount","everscale_inpage_provider_1","require","bignumber_js_1","core_1","ensureNekotonLoaded","nekoton","default","computeAddress","args","publicKey","hash","makeStateInit","nonce","Address","workchain","fromPubkey","address","result","constructor","fetchPublicKey","ctx","then","isDeployed","toString","padStart","prepareMessage","stateInit","fetchState","signer","getSigner","payload","encodeInternalInput","abi","method","params","EVER_WALLET_ABI","dest","recipient","amount","bounce","flags","EVER_WALLET_ABI_RAW","message","encodeInternalMessage","dst","body","createExternalMessage","timeout","signatureId","undefined","state","getFullContractState","Error","boc","extractPublicKey","tokens","DATA_STRUCTURE_EXT","toFixed","timestamp","DATA_STRUCTURE","data","packIntoCell","mergeTvc","EVER_WALLET_CODE","name","type"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/node_modules/everscale-standalone-client/client/AccountsStorage/EverWallet.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EverWalletAccount = void 0;\nconst everscale_inpage_provider_1 = require(\"everscale-inpage-provider\");\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst core_1 = __importDefault(require(\"../../core\"));\nconst { ensureNekotonLoaded, nekoton } = core_1.default;\n/**\n * @category AccountsStorage\n */\nclass EverWalletAccount {\n    static async computeAddress(args) {\n        // TODO: Somehow propagate init params\n        await ensureNekotonLoaded();\n        const publicKey = args.publicKey instanceof bignumber_js_1.default ? args.publicKey : new bignumber_js_1.default(`0x${args.publicKey}`);\n        const hash = makeStateInit(publicKey, args.nonce).hash;\n        return new everscale_inpage_provider_1.Address(`${args.workchain != null ? args.workchain : 0}:${hash}`);\n    }\n    static async fromPubkey(args) {\n        const publicKey = new bignumber_js_1.default(`0x${args.publicKey}`);\n        const address = await EverWalletAccount.computeAddress({ publicKey, workchain: args.workchain, nonce: args.nonce });\n        const result = new EverWalletAccount(address);\n        result.publicKey = publicKey;\n        result.nonce = args.nonce;\n        return result;\n    }\n    constructor(address) {\n        this.address = address;\n    }\n    async fetchPublicKey(ctx) {\n        let publicKey = this.publicKey;\n        if (publicKey == null) {\n            publicKey = this.publicKey = await ctx\n                .fetchPublicKey(this.address)\n                .then(publicKey => new bignumber_js_1.default(`0x${publicKey}`));\n            this.isDeployed = true;\n        }\n        return publicKey.toString(16).padStart(64, '0');\n    }\n    async prepareMessage(args, ctx) {\n        const { publicKey, stateInit } = await this.fetchState(ctx);\n        const signer = await ctx.getSigner(publicKey);\n        const payload = args.payload ? ctx.encodeInternalInput(args.payload) : '';\n        let abi;\n        let method;\n        let params;\n        if (args.stateInit == null) {\n            abi = EVER_WALLET_ABI;\n            method = 'sendTransaction';\n            params = {\n                dest: args.recipient,\n                value: args.amount,\n                bounce: args.bounce,\n                flags: 3,\n                payload,\n            };\n        }\n        else {\n            abi = EVER_WALLET_ABI_RAW;\n            method = 'sendTransactionRaw';\n            params = {\n                flags: 3,\n                message: ctx.encodeInternalMessage({\n                    dst: args.recipient,\n                    bounce: args.bounce,\n                    stateInit: args.stateInit,\n                    body: payload,\n                    amount: args.amount,\n                }),\n            };\n        }\n        return ctx.createExternalMessage({\n            address: this.address,\n            signer,\n            timeout: args.timeout,\n            abi,\n            method,\n            params,\n            stateInit,\n            signatureId: args.signatureId,\n        });\n    }\n    async fetchState(ctx) {\n        let stateInit = undefined;\n        let publicKey;\n        if (this.isDeployed === true && this.publicKey != null) {\n            publicKey = this.publicKey;\n        }\n        else {\n            const state = await ctx.getFullContractState(this.address);\n            if (state == null || !state.isDeployed) {\n                if (this.publicKey == null) {\n                    throw new Error('Contract not deployed and public key was not specified');\n                }\n                stateInit = makeStateInit(this.publicKey, this.nonce).boc;\n                publicKey = this.publicKey;\n            }\n            else {\n                this.isDeployed = true;\n                publicKey = new bignumber_js_1.default(`0x${nekoton.extractPublicKey(state.boc)}`);\n            }\n            if (this.publicKey == null) {\n                this.publicKey = publicKey;\n            }\n        }\n        return {\n            publicKey: publicKey.toString(16).padStart(64, '0'),\n            stateInit,\n        };\n    }\n}\nexports.EverWalletAccount = EverWalletAccount;\nconst makeStateInit = (publicKey, nonce) => {\n    let params, tokens;\n    if (nonce != null) {\n        params = DATA_STRUCTURE_EXT;\n        tokens = {\n            publicKey: publicKey.toFixed(0),\n            timestamp: 0,\n            nonce,\n        };\n    }\n    else {\n        params = DATA_STRUCTURE;\n        tokens = {\n            publicKey: publicKey.toFixed(0),\n            timestamp: 0,\n        };\n    }\n    const data = nekoton.packIntoCell(params, tokens).boc;\n    return nekoton.mergeTvc(EVER_WALLET_CODE, data);\n};\nconst DATA_STRUCTURE = [\n    { name: 'publicKey', type: 'uint256' },\n    { name: 'timestamp', type: 'uint64' },\n];\nconst DATA_STRUCTURE_EXT = [\n    { name: 'publicKey', type: 'uint256' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'nonce', type: 'uint32' },\n];\nconst EVER_WALLET_CODE = 'te6cckEBBgEA/AABFP8A9KQT9LzyyAsBAgEgAgMABNIwAubycdcBAcAA8nqDCNcY7UTQgwfXAdcLP8j4KM8WI88WyfkAA3HXAQHDAJqDB9cBURO68uBk3oBA1wGAINcBgCDXAVQWdfkQ8qj4I7vyeWa++COBBwiggQPoqFIgvLHydAIgghBM7mRsuuMPAcjL/8s/ye1UBAUAmDAC10zQ+kCDBtcBcdcBeNcB10z4AHCAEASqAhSxyMsFUAXPFlAD+gLLaSLQIc8xIddJoIQJuZgzcAHLAFjPFpcwcQHLABLM4skB+wAAPoIQFp4+EbqOEfgAApMg10qXeNcB1AL7AOjRkzLyPOI+zYS/';\nconst EVER_WALLET_ABI = `{\n  \"ABI version\": 2,\n  \"version\": \"2.3\",\n  \"header\": [\"pubkey\", \"time\", \"expire\"],\n  \"functions\": [{\n    \"name\": \"sendTransaction\",\n    \"inputs\": [\n      {\"name\":\"dest\",\"type\":\"address\"},\n      {\"name\":\"value\",\"type\":\"uint128\"},\n      {\"name\":\"bounce\",\"type\":\"bool\"},\n      {\"name\":\"flags\",\"type\":\"uint8\"},\n      {\"name\":\"payload\",\"type\":\"cell\"}\n    ],\n    \"outputs\": []\n  }],\n  \"events\": []\n}`;\nconst EVER_WALLET_ABI_RAW = `{\n  \"ABI version\": 2,\n  \"version\": \"2.3\",\n  \"header\": [\"pubkey\", \"time\", \"expire\"],\n  \"functions\": [{\n    \"name\": \"sendTransactionRaw\",\n    \"inputs\": [\n      {\"name\":\"flags\",\"type\":\"uint8\"},\n      {\"name\":\"message\",\"type\":\"cell\"}\n    ],\n    \"outputs\": [],\n    \"id\": \"0x169e3e11\"\n  }],\n  \"events\": []\n}`;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}