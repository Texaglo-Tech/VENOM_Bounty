{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimpleAccountsStorage = exports.AccountsStorageContext = exports.EverWalletAccount = exports.HighloadWalletV2 = exports.WalletV3Account = exports.MsigAccount = exports.GenericAccount = exports.GiverAccount = void 0;\nconst utils_1 = require(\"../utils\");\nvar Giver_1 = require(\"./Giver\");\nObject.defineProperty(exports, \"GiverAccount\", {\n  enumerable: true,\n  get: function () {\n    return Giver_1.GiverAccount;\n  }\n});\nvar Generic_1 = require(\"./Generic\");\nObject.defineProperty(exports, \"GenericAccount\", {\n  enumerable: true,\n  get: function () {\n    return Generic_1.GenericAccount;\n  }\n});\nObject.defineProperty(exports, \"MsigAccount\", {\n  enumerable: true,\n  get: function () {\n    return Generic_1.MsigAccount;\n  }\n});\nvar WalletV3_1 = require(\"./WalletV3\");\nObject.defineProperty(exports, \"WalletV3Account\", {\n  enumerable: true,\n  get: function () {\n    return WalletV3_1.WalletV3Account;\n  }\n});\nvar HighloadWalletV2_1 = require(\"./HighloadWalletV2\");\nObject.defineProperty(exports, \"HighloadWalletV2\", {\n  enumerable: true,\n  get: function () {\n    return HighloadWalletV2_1.HighloadWalletV2;\n  }\n});\nvar EverWallet_1 = require(\"./EverWallet\");\nObject.defineProperty(exports, \"EverWalletAccount\", {\n  enumerable: true,\n  get: function () {\n    return EverWallet_1.EverWalletAccount;\n  }\n});\n/**\n * @category AccountsStorage\n */\nclass AccountsStorageContext {\n  constructor(clock, connectionController, nekoton, keystore) {\n    this.clock = clock;\n    this.connectionController = connectionController;\n    this.nekoton = nekoton;\n    this.keystore = keystore;\n  }\n  async getSigner(publicKey) {\n    if (this.keystore == null) {\n      throw new Error('Keystore not found');\n    }\n    const signer = await this.keystore.getSigner(publicKey);\n    if (signer == null) {\n      throw new Error('Signer not found');\n    }\n    return signer;\n  }\n  get nowMs() {\n    return this.clock.nowMs;\n  }\n  get nowSec() {\n    return ~~(this.clock.nowMs / 1000);\n  }\n  async fetchPublicKey(address) {\n    const state = await this.getFullContractState(address);\n    if (state == null || !state.isDeployed) {\n      throw new Error('Contract not deployed');\n    }\n    return this.nekoton.extractPublicKey(state.boc);\n  }\n  async getFullContractState(address) {\n    return this.connectionController.use(async _ref => {\n      let {\n        data: {\n          transport\n        }\n      } = _ref;\n      return transport.getFullContractState(address.toString());\n    });\n  }\n  extractContractData(boc) {\n    return this.nekoton.extractContractData(boc);\n  }\n  packIntoCell(args) {\n    return this.nekoton.packIntoCell(args.structure, args.data, args.abiVersion);\n  }\n  unpackFromCell(args) {\n    return this.nekoton.unpackFromCell(args.structure, args.boc, args.allowPartial, args.abiVersion);\n  }\n  getBocHash(boc) {\n    return this.nekoton.getBocHash(boc);\n  }\n  extendSignature(signature) {\n    return this.nekoton.extendSignature(signature);\n  }\n  encodeInternalInput(args) {\n    return this.nekoton.encodeInternalInput(args.abi, args.method, args.params);\n  }\n  encodeInternalMessage(args) {\n    return this.nekoton.encodeInternalMessage(args.src, args.dst, args.bounce, args.stateInit, args.body, args.amount);\n  }\n  async createExternalMessage(args) {\n    const unsignedMessage = this.nekoton.createExternalMessage(this.clock, args.address.toString(), args.abi, args.method, args.stateInit, args.params, args.signer.publicKey, args.timeout);\n    try {\n      const signature = await args.signer.sign(unsignedMessage.hash, args.signatureId);\n      return unsignedMessage.sign(signature);\n    } finally {\n      unsignedMessage.free();\n    }\n  }\n  createRawExternalMessage(args) {\n    return this.nekoton.createRawExternalMessage(args.address.toString(), args.stateInit, args.body, args.expireAt);\n  }\n}\nexports.AccountsStorageContext = AccountsStorageContext;\n/**\n * @category AccountsStorage\n */\nclass SimpleAccountsStorage {\n  /**\n   * Creates new simple accounts storage.\n   *\n   * If no `defaultAccount` provided, uses first provided entry\n   *\n   * @param args\n   */\n  constructor() {\n    let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.accounts = new Map();\n    if (args.entries != null) {\n      for (const account of args.entries) {\n        if (this._defaultAccount == null) {\n          this._defaultAccount = account.address;\n        }\n        this.accounts.set(account.address.toString(), account);\n      }\n    }\n    if (args.defaultAccount != null) {\n      const defaultAccount = (0, utils_1.convertToAddressObject)(args.defaultAccount);\n      if (!this.accounts.has(defaultAccount.toString())) {\n        throw new Error('Provided default account not found in storage');\n      }\n      this._defaultAccount = defaultAccount;\n    }\n  }\n  get defaultAccount() {\n    return this._defaultAccount;\n  }\n  set defaultAccount(value) {\n    const address = value === null || value === void 0 ? void 0 : value.toString();\n    if (address != null && !this.accounts.has(address)) {\n      throw new Error('Account not found in storage');\n    }\n    this._defaultAccount = value == null ? value : (0, utils_1.convertToAddressObject)(value);\n  }\n  async getAccount(address) {\n    return this.accounts.get(address.toString());\n  }\n  addAccount(account) {\n    const address = account.address;\n    this.accounts.set(address.toString(), account);\n    return address;\n  }\n  hasAccount(address) {\n    return this.accounts.has(address.toString());\n  }\n  removeAccount(address) {\n    this.accounts.delete(address.toString());\n  }\n}\nexports.SimpleAccountsStorage = SimpleAccountsStorage;","map":{"version":3,"names":["Object","defineProperty","exports","value","SimpleAccountsStorage","AccountsStorageContext","EverWalletAccount","HighloadWalletV2","WalletV3Account","MsigAccount","GenericAccount","GiverAccount","utils_1","require","Giver_1","enumerable","get","Generic_1","WalletV3_1","HighloadWalletV2_1","EverWallet_1","constructor","clock","connectionController","nekoton","keystore","getSigner","publicKey","Error","signer","nowMs","nowSec","fetchPublicKey","address","state","getFullContractState","isDeployed","extractPublicKey","boc","use","_ref","data","transport","toString","extractContractData","packIntoCell","args","structure","abiVersion","unpackFromCell","allowPartial","getBocHash","extendSignature","signature","encodeInternalInput","abi","method","params","encodeInternalMessage","src","dst","bounce","stateInit","body","amount","createExternalMessage","unsignedMessage","timeout","sign","hash","signatureId","free","createRawExternalMessage","expireAt","arguments","length","undefined","accounts","Map","entries","account","_defaultAccount","set","defaultAccount","convertToAddressObject","has","getAccount","addAccount","hasAccount","removeAccount","delete"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/node_modules/everscale-standalone-client/client/AccountsStorage/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleAccountsStorage = exports.AccountsStorageContext = exports.EverWalletAccount = exports.HighloadWalletV2 = exports.WalletV3Account = exports.MsigAccount = exports.GenericAccount = exports.GiverAccount = void 0;\nconst utils_1 = require(\"../utils\");\nvar Giver_1 = require(\"./Giver\");\nObject.defineProperty(exports, \"GiverAccount\", { enumerable: true, get: function () { return Giver_1.GiverAccount; } });\nvar Generic_1 = require(\"./Generic\");\nObject.defineProperty(exports, \"GenericAccount\", { enumerable: true, get: function () { return Generic_1.GenericAccount; } });\nObject.defineProperty(exports, \"MsigAccount\", { enumerable: true, get: function () { return Generic_1.MsigAccount; } });\nvar WalletV3_1 = require(\"./WalletV3\");\nObject.defineProperty(exports, \"WalletV3Account\", { enumerable: true, get: function () { return WalletV3_1.WalletV3Account; } });\nvar HighloadWalletV2_1 = require(\"./HighloadWalletV2\");\nObject.defineProperty(exports, \"HighloadWalletV2\", { enumerable: true, get: function () { return HighloadWalletV2_1.HighloadWalletV2; } });\nvar EverWallet_1 = require(\"./EverWallet\");\nObject.defineProperty(exports, \"EverWalletAccount\", { enumerable: true, get: function () { return EverWallet_1.EverWalletAccount; } });\n/**\n * @category AccountsStorage\n */\nclass AccountsStorageContext {\n    constructor(clock, connectionController, nekoton, keystore) {\n        this.clock = clock;\n        this.connectionController = connectionController;\n        this.nekoton = nekoton;\n        this.keystore = keystore;\n    }\n    async getSigner(publicKey) {\n        if (this.keystore == null) {\n            throw new Error('Keystore not found');\n        }\n        const signer = await this.keystore.getSigner(publicKey);\n        if (signer == null) {\n            throw new Error('Signer not found');\n        }\n        return signer;\n    }\n    get nowMs() {\n        return this.clock.nowMs;\n    }\n    get nowSec() {\n        return ~~(this.clock.nowMs / 1000);\n    }\n    async fetchPublicKey(address) {\n        const state = await this.getFullContractState(address);\n        if (state == null || !state.isDeployed) {\n            throw new Error('Contract not deployed');\n        }\n        return this.nekoton.extractPublicKey(state.boc);\n    }\n    async getFullContractState(address) {\n        return this.connectionController.use(async ({ data: { transport } }) => transport.getFullContractState(address.toString()));\n    }\n    extractContractData(boc) {\n        return this.nekoton.extractContractData(boc);\n    }\n    packIntoCell(args) {\n        return this.nekoton.packIntoCell(args.structure, args.data, args.abiVersion);\n    }\n    unpackFromCell(args) {\n        return this.nekoton.unpackFromCell(args.structure, args.boc, args.allowPartial, args.abiVersion);\n    }\n    getBocHash(boc) {\n        return this.nekoton.getBocHash(boc);\n    }\n    extendSignature(signature) {\n        return this.nekoton.extendSignature(signature);\n    }\n    encodeInternalInput(args) {\n        return this.nekoton.encodeInternalInput(args.abi, args.method, args.params);\n    }\n    encodeInternalMessage(args) {\n        return this.nekoton.encodeInternalMessage(args.src, args.dst, args.bounce, args.stateInit, args.body, args.amount);\n    }\n    async createExternalMessage(args) {\n        const unsignedMessage = this.nekoton.createExternalMessage(this.clock, args.address.toString(), args.abi, args.method, args.stateInit, args.params, args.signer.publicKey, args.timeout);\n        try {\n            const signature = await args.signer.sign(unsignedMessage.hash, args.signatureId);\n            return unsignedMessage.sign(signature);\n        }\n        finally {\n            unsignedMessage.free();\n        }\n    }\n    createRawExternalMessage(args) {\n        return this.nekoton.createRawExternalMessage(args.address.toString(), args.stateInit, args.body, args.expireAt);\n    }\n}\nexports.AccountsStorageContext = AccountsStorageContext;\n/**\n * @category AccountsStorage\n */\nclass SimpleAccountsStorage {\n    /**\n     * Creates new simple accounts storage.\n     *\n     * If no `defaultAccount` provided, uses first provided entry\n     *\n     * @param args\n     */\n    constructor(args = {}) {\n        this.accounts = new Map();\n        if (args.entries != null) {\n            for (const account of args.entries) {\n                if (this._defaultAccount == null) {\n                    this._defaultAccount = account.address;\n                }\n                this.accounts.set(account.address.toString(), account);\n            }\n        }\n        if (args.defaultAccount != null) {\n            const defaultAccount = (0, utils_1.convertToAddressObject)(args.defaultAccount);\n            if (!this.accounts.has(defaultAccount.toString())) {\n                throw new Error('Provided default account not found in storage');\n            }\n            this._defaultAccount = defaultAccount;\n        }\n    }\n    get defaultAccount() {\n        return this._defaultAccount;\n    }\n    set defaultAccount(value) {\n        const address = value === null || value === void 0 ? void 0 : value.toString();\n        if (address != null && !this.accounts.has(address)) {\n            throw new Error('Account not found in storage');\n        }\n        this._defaultAccount = value == null ? value : (0, utils_1.convertToAddressObject)(value);\n    }\n    async getAccount(address) {\n        return this.accounts.get(address.toString());\n    }\n    addAccount(account) {\n        const address = account.address;\n        this.accounts.set(address.toString(), account);\n        return address;\n    }\n    hasAccount(address) {\n        return this.accounts.has(address.toString());\n    }\n    removeAccount(address) {\n        this.accounts.delete(address.toString());\n    }\n}\nexports.SimpleAccountsStorage = SimpleAccountsStorage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}