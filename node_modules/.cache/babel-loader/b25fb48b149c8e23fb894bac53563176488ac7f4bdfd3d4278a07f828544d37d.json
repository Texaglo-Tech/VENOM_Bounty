{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Clock = void 0;\n/**\n * Wrapper around clocks which are used in `EverscaleStandaloneClient` instances\n *\n * @category Client\n */\nclass Clock {\n  constructor(offset) {\n    this.impls = [];\n    this.currentOffset = 0;\n    if (offset != null) {\n      this.currentOffset = offset;\n    }\n  }\n  /**\n   * Clock offset in milliseconds\n   */\n  get offset() {\n    return this.currentOffset;\n  }\n  /**\n   * Set clock offset in milliseconds\n   */\n  set offset(value) {\n    this.currentOffset = value;\n    for (const impl of this.impls) {\n      impl.updateOffset(this.currentOffset);\n    }\n  }\n  /**\n   * Returns current time in milliseconds\n   */\n  get time() {\n    return new Date().getTime() + this.offset;\n  }\n  /**\n   * Detaches all affected providers\n   *\n   * NOTE: affected providers offset remains the same\n   */\n  detach() {\n    this.impls = [];\n  }\n}\nexports.Clock = Clock;","map":{"version":3,"names":["Object","defineProperty","exports","value","Clock","constructor","offset","impls","currentOffset","impl","updateOffset","time","Date","getTime","detach"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/node_modules/everscale-standalone-client/client/clock.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Clock = void 0;\n/**\n * Wrapper around clocks which are used in `EverscaleStandaloneClient` instances\n *\n * @category Client\n */\nclass Clock {\n    constructor(offset) {\n        this.impls = [];\n        this.currentOffset = 0;\n        if (offset != null) {\n            this.currentOffset = offset;\n        }\n    }\n    /**\n     * Clock offset in milliseconds\n     */\n    get offset() {\n        return this.currentOffset;\n    }\n    /**\n     * Set clock offset in milliseconds\n     */\n    set offset(value) {\n        this.currentOffset = value;\n        for (const impl of this.impls) {\n            impl.updateOffset(this.currentOffset);\n        }\n    }\n    /**\n     * Returns current time in milliseconds\n     */\n    get time() {\n        return new Date().getTime() + this.offset;\n    }\n    /**\n     * Detaches all affected providers\n     *\n     * NOTE: affected providers offset remains the same\n     */\n    detach() {\n        this.impls = [];\n    }\n}\nexports.Clock = Clock;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,KAAK,GAAG,KAAK,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA,MAAMA,KAAK,CAAC;EACRC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAIF,MAAM,IAAI,IAAI,EAAE;MAChB,IAAI,CAACE,aAAa,GAAGF,MAAM;IAC/B;EACJ;EACA;AACJ;AACA;EACI,IAAIA,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACE,aAAa;EAC7B;EACA;AACJ;AACA;EACI,IAAIF,MAAMA,CAACH,KAAK,EAAE;IACd,IAAI,CAACK,aAAa,GAAGL,KAAK;IAC1B,KAAK,MAAMM,IAAI,IAAI,IAAI,CAACF,KAAK,EAAE;MAC3BE,IAAI,CAACC,YAAY,CAAC,IAAI,CAACF,aAAa,CAAC;IACzC;EACJ;EACA;AACJ;AACA;EACI,IAAIG,IAAIA,CAAA,EAAG;IACP,OAAO,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,CAACP,MAAM;EAC7C;EACA;AACJ;AACA;AACA;AACA;EACIQ,MAAMA,CAAA,EAAG;IACL,IAAI,CAACP,KAAK,GAAG,EAAE;EACnB;AACJ;AACAL,OAAO,CAACE,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}