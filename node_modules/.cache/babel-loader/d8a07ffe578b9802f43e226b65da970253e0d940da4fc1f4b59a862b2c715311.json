{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUniqueId = exports.mergeTransactions = exports.LT_COLLATOR = exports.Semaphore = exports.DelayedTransactions = exports.MessageExpiredException = exports.AddressLiteral = exports.isAddressObject = exports.Address = void 0;\n/**\n * @category Utils\n */\nclass Address {\n  constructor(address) {\n    this.equals = other => this._equals(other);\n    this._address = address;\n  }\n  toString() {\n    return this._address;\n  }\n  toJSON() {\n    return this._address;\n  }\n  _equals(other) {\n    if (typeof other === 'string') {\n      return this._address === other;\n    } else {\n      return this._address === (other === null || other === void 0 ? void 0 : other._address);\n    }\n  }\n}\nexports.Address = Address;\n/**\n * Check whether the provider object is instance of `Address`,\n * handling the case of duplicated dependencies.\n */\nfunction isAddressObject(address) {\n  return address != null && (address instanceof Address || Object.getPrototypeOf(address).constructor.name === Address.prototype.constructor.name);\n}\nexports.isAddressObject = isAddressObject;\n/**\n * @category Utils\n */\nclass AddressLiteral extends Address {\n  constructor(address) {\n    super(address);\n  }\n}\nexports.AddressLiteral = AddressLiteral;\n/**\n * @category Utils\n */\nclass MessageExpiredException extends Error {\n  constructor(address, hash) {\n    super('Message expired');\n    this.address = address;\n    this.hash = hash;\n  }\n}\nexports.MessageExpiredException = MessageExpiredException;\nclass DelayedTransactions {\n  constructor() {\n    this.transactions = new Map();\n  }\n  async waitTransaction(address, hash) {\n    var _a;\n    let transaction = (_a = this.transactions.get(hash)) === null || _a === void 0 ? void 0 : _a.promise;\n    if (transaction == null) {\n      let resolve;\n      let reject;\n      transaction = new Promise((promiseResolve, promiseReject) => {\n        resolve = tx => promiseResolve(tx);\n        reject = () => promiseReject();\n      });\n      this.transactions.set(hash, {\n        promise: transaction,\n        resolve: resolve,\n        reject: reject\n      });\n    }\n    const tx = await transaction;\n    if (tx == null) {\n      throw new MessageExpiredException(address, hash);\n    }\n    return tx;\n  }\n  fillTransaction(hash, transaction) {\n    const pendingTransaction = this.transactions.get(hash);\n    if (pendingTransaction != null) {\n      pendingTransaction.resolve(transaction);\n    } else {\n      this.transactions.set(hash, {\n        promise: Promise.resolve(transaction),\n        resolve: () => {},\n        reject: () => {}\n      });\n    }\n  }\n}\nexports.DelayedTransactions = DelayedTransactions;\n/**\n * @category Utils\n */\nclass Semaphore {\n  constructor(count) {\n    this.tasks = [];\n    this.sched = () => {\n      var _a;\n      if (this.count > 0 && this.tasks.length > 0) {\n        this.count--;\n        (_a = this.tasks.shift()) === null || _a === void 0 ? void 0 : _a();\n      }\n    };\n    this.count = count;\n  }\n  acquire() {\n    return new Promise((res, _rej) => {\n      this.tasks.push(() => {\n        let released = false;\n        res(() => {\n          if (!released) {\n            released = true;\n            this.count++;\n            this.sched();\n          }\n        });\n      });\n      nextTick(this.sched);\n    });\n  }\n  releaseAll() {\n    var _a;\n    while (this.tasks.length > 0) {\n      (_a = this.tasks.shift()) === null || _a === void 0 ? void 0 : _a();\n    }\n  }\n}\nexports.Semaphore = Semaphore;\nfunction byObserver(Observer) {\n  const node = document.createTextNode('');\n  let queue,\n    currentQueue,\n    bit = 0,\n    i = 0;\n  new Observer(function () {\n    let callback;\n    if (!queue) {\n      if (!currentQueue) return;\n      queue = currentQueue;\n    } else if (currentQueue) {\n      queue = currentQueue.slice(i).concat(queue);\n    }\n    currentQueue = queue;\n    queue = null;\n    i = 0;\n    if (typeof currentQueue === 'function') {\n      callback = currentQueue;\n      currentQueue = null;\n      callback();\n      return;\n    }\n    node.data = bit = ++bit % 2;\n    while (i < currentQueue.length) {\n      callback = currentQueue[i];\n      i++;\n      if (i === currentQueue.length) currentQueue = null;\n      callback();\n    }\n  }).observe(node, {\n    characterData: true\n  });\n  return function (fn) {\n    if (queue) {\n      if (typeof queue === 'function') queue = [queue, fn];else queue.push(fn);\n      return;\n    }\n    queue = fn;\n    node.data = bit = ++bit % 2;\n  };\n}\nconst nextTick = function () {\n  // queueMicrotask\n  if (typeof queueMicrotask === 'function') {\n    return queueMicrotask;\n  }\n  // MutationObserver\n  if (typeof document === 'object' && document) {\n    if (typeof MutationObserver === 'function') return byObserver(MutationObserver);\n    if (typeof window.WebKitMutationObserver === 'function') return byObserver(window.WebKitMutationObserver);\n  }\n  /* @ts-ignore */\n  if (typeof setImmediate === 'function') {\n    /* @ts-ignore */\n    return setImmediate;\n  }\n  if (typeof setTimeout === 'function' || typeof setTimeout === 'object') {\n    return function (cb) {\n      setTimeout(cb, 0);\n    };\n  }\n  throw new Error('No `nextTick` implementation found');\n}();\n/**\n * @category Utils\n */\nexports.LT_COLLATOR = new Intl.Collator(undefined, {\n  numeric: true,\n  sensitivity: 'base'\n});\n/**\n * Modifies knownTransactions array, merging it with new transactions.\n * All arrays are assumed to be sorted by descending logical time.\n *\n * > Note! This method does not remove duplicates.\n *\n * @param knownTransactions\n * @param newTransactions\n * @param info\n *\n * @category Utils\n */\nfunction mergeTransactions(knownTransactions, newTransactions, info) {\n  if (info.batchType === 'old') {\n    knownTransactions.push(...newTransactions);\n    return knownTransactions;\n  }\n  if (knownTransactions.length === 0) {\n    knownTransactions.push(...newTransactions);\n    return knownTransactions;\n  }\n  // Example:\n  // known lts: [N, N-1, N-2, N-3, (!) N-10,...]\n  // new lts: [N-4, N-5]\n  // batch info: { minLt: N-5, maxLt: N-4, batchType: 'new' }\n  // 1. Skip indices until known transaction lt is greater than the biggest in the batch\n  let i = 0;\n  while (i < knownTransactions.length && exports.LT_COLLATOR.compare(knownTransactions[i].id.lt, info.maxLt) >= 0) {\n    ++i;\n  }\n  // 2. Insert new transactions\n  knownTransactions.splice(i, 0, ...newTransactions);\n  return knownTransactions;\n}\nexports.mergeTransactions = mergeTransactions;\nconst MAX = 4294967295;\nlet idCounter = Math.floor(Math.random() * MAX);\nfunction getUniqueId() {\n  idCounter = (idCounter + 1) % MAX;\n  return idCounter;\n}\nexports.getUniqueId = getUniqueId;","map":{"version":3,"names":["Object","defineProperty","exports","value","getUniqueId","mergeTransactions","LT_COLLATOR","Semaphore","DelayedTransactions","MessageExpiredException","AddressLiteral","isAddressObject","Address","constructor","address","equals","other","_equals","_address","toString","toJSON","getPrototypeOf","name","prototype","Error","hash","transactions","Map","waitTransaction","_a","transaction","get","promise","resolve","reject","Promise","promiseResolve","promiseReject","tx","set","fillTransaction","pendingTransaction","count","tasks","sched","length","shift","acquire","res","_rej","push","released","nextTick","releaseAll","byObserver","Observer","node","document","createTextNode","queue","currentQueue","bit","i","callback","slice","concat","data","observe","characterData","fn","queueMicrotask","MutationObserver","window","WebKitMutationObserver","setImmediate","setTimeout","cb","Intl","Collator","undefined","numeric","sensitivity","knownTransactions","newTransactions","info","batchType","compare","id","lt","maxLt","splice","MAX","idCounter","Math","floor","random"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/node_modules/everscale-inpage-provider/dist/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUniqueId = exports.mergeTransactions = exports.LT_COLLATOR = exports.Semaphore = exports.DelayedTransactions = exports.MessageExpiredException = exports.AddressLiteral = exports.isAddressObject = exports.Address = void 0;\n/**\n * @category Utils\n */\nclass Address {\n    constructor(address) {\n        this.equals = (other) => this._equals(other);\n        this._address = address;\n    }\n    toString() {\n        return this._address;\n    }\n    toJSON() {\n        return this._address;\n    }\n    _equals(other) {\n        if (typeof other === 'string') {\n            return this._address === other;\n        }\n        else {\n            return this._address === (other === null || other === void 0 ? void 0 : other._address);\n        }\n    }\n}\nexports.Address = Address;\n/**\n * Check whether the provider object is instance of `Address`,\n * handling the case of duplicated dependencies.\n */\nfunction isAddressObject(address) {\n    return (address != null &&\n        (address instanceof Address ||\n            Object.getPrototypeOf(address).constructor.name === Address.prototype.constructor.name));\n}\nexports.isAddressObject = isAddressObject;\n/**\n * @category Utils\n */\nclass AddressLiteral extends Address {\n    constructor(address) {\n        super(address);\n    }\n}\nexports.AddressLiteral = AddressLiteral;\n/**\n * @category Utils\n */\nclass MessageExpiredException extends Error {\n    constructor(address, hash) {\n        super('Message expired');\n        this.address = address;\n        this.hash = hash;\n    }\n}\nexports.MessageExpiredException = MessageExpiredException;\nclass DelayedTransactions {\n    constructor() {\n        this.transactions = new Map();\n    }\n    async waitTransaction(address, hash) {\n        var _a;\n        let transaction = (_a = this.transactions.get(hash)) === null || _a === void 0 ? void 0 : _a.promise;\n        if (transaction == null) {\n            let resolve;\n            let reject;\n            transaction = new Promise((promiseResolve, promiseReject) => {\n                resolve = (tx) => promiseResolve(tx);\n                reject = () => promiseReject();\n            });\n            this.transactions.set(hash, {\n                promise: transaction,\n                resolve: resolve,\n                reject: reject,\n            });\n        }\n        const tx = await transaction;\n        if (tx == null) {\n            throw new MessageExpiredException(address, hash);\n        }\n        return tx;\n    }\n    fillTransaction(hash, transaction) {\n        const pendingTransaction = this.transactions.get(hash);\n        if (pendingTransaction != null) {\n            pendingTransaction.resolve(transaction);\n        }\n        else {\n            this.transactions.set(hash, {\n                promise: Promise.resolve(transaction),\n                resolve: () => {\n                },\n                reject: () => {\n                },\n            });\n        }\n    }\n}\nexports.DelayedTransactions = DelayedTransactions;\n/**\n * @category Utils\n */\nclass Semaphore {\n    constructor(count) {\n        this.tasks = [];\n        this.sched = () => {\n            var _a;\n            if (this.count > 0 && this.tasks.length > 0) {\n                this.count--;\n                (_a = this.tasks.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        };\n        this.count = count;\n    }\n    acquire() {\n        return new Promise((res, _rej) => {\n            this.tasks.push(() => {\n                let released = false;\n                res(() => {\n                    if (!released) {\n                        released = true;\n                        this.count++;\n                        this.sched();\n                    }\n                });\n            });\n            nextTick(this.sched);\n        });\n    }\n    releaseAll() {\n        var _a;\n        while (this.tasks.length > 0) {\n            (_a = this.tasks.shift()) === null || _a === void 0 ? void 0 : _a();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\nfunction byObserver(Observer) {\n    const node = document.createTextNode('');\n    let queue, currentQueue, bit = 0, i = 0;\n    new Observer(function () {\n        let callback;\n        if (!queue) {\n            if (!currentQueue)\n                return;\n            queue = currentQueue;\n        }\n        else if (currentQueue) {\n            queue = currentQueue.slice(i).concat(queue);\n        }\n        currentQueue = queue;\n        queue = null;\n        i = 0;\n        if (typeof currentQueue === 'function') {\n            callback = currentQueue;\n            currentQueue = null;\n            callback();\n            return;\n        }\n        node.data = (bit = ++bit % 2);\n        while (i < currentQueue.length) {\n            callback = currentQueue[i];\n            i++;\n            if (i === currentQueue.length)\n                currentQueue = null;\n            callback();\n        }\n    }).observe(node, { characterData: true });\n    return function (fn) {\n        if (queue) {\n            if (typeof queue === 'function')\n                queue = [queue, fn];\n            else\n                queue.push(fn);\n            return;\n        }\n        queue = fn;\n        node.data = (bit = ++bit % 2);\n    };\n}\nconst nextTick = (function () {\n    // queueMicrotask\n    if (typeof queueMicrotask === 'function') {\n        return queueMicrotask;\n    }\n    // MutationObserver\n    if ((typeof document === 'object') && document) {\n        if (typeof MutationObserver === 'function')\n            return byObserver(MutationObserver);\n        if (typeof window.WebKitMutationObserver === 'function')\n            return byObserver(window.WebKitMutationObserver);\n    }\n    /* @ts-ignore */\n    if (typeof setImmediate === 'function') {\n        /* @ts-ignore */\n        return setImmediate;\n    }\n    if ((typeof setTimeout === 'function') || (typeof setTimeout === 'object')) {\n        return function (cb) {\n            setTimeout(cb, 0);\n        };\n    }\n    throw new Error('No `nextTick` implementation found');\n}());\n/**\n * @category Utils\n */\nexports.LT_COLLATOR = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n/**\n * Modifies knownTransactions array, merging it with new transactions.\n * All arrays are assumed to be sorted by descending logical time.\n *\n * > Note! This method does not remove duplicates.\n *\n * @param knownTransactions\n * @param newTransactions\n * @param info\n *\n * @category Utils\n */\nfunction mergeTransactions(knownTransactions, newTransactions, info) {\n    if (info.batchType === 'old') {\n        knownTransactions.push(...newTransactions);\n        return knownTransactions;\n    }\n    if (knownTransactions.length === 0) {\n        knownTransactions.push(...newTransactions);\n        return knownTransactions;\n    }\n    // Example:\n    // known lts: [N, N-1, N-2, N-3, (!) N-10,...]\n    // new lts: [N-4, N-5]\n    // batch info: { minLt: N-5, maxLt: N-4, batchType: 'new' }\n    // 1. Skip indices until known transaction lt is greater than the biggest in the batch\n    let i = 0;\n    while (i < knownTransactions.length &&\n        exports.LT_COLLATOR.compare(knownTransactions[i].id.lt, info.maxLt) >= 0) {\n        ++i;\n    }\n    // 2. Insert new transactions\n    knownTransactions.splice(i, 0, ...newTransactions);\n    return knownTransactions;\n}\nexports.mergeTransactions = mergeTransactions;\nconst MAX = 4294967295;\nlet idCounter = Math.floor(Math.random() * MAX);\nfunction getUniqueId() {\n    idCounter = (idCounter + 1) % MAX;\n    return idCounter;\n}\nexports.getUniqueId = getUniqueId;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}