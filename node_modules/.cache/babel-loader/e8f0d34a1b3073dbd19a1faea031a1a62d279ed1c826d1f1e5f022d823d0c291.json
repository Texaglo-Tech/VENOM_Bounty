{"ast":null,"code":"var _jsxFileName = \"/home/king/Desktop/venom-connect-main/examples/react/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { ProviderRpcClient } from \"everscale-inpage-provider\";\nimport { EverscaleStandaloneClient } from \"everscale-standalone-client\";\nimport { useEffect, useState } from \"react\";\nimport { VenomConnect } from \"venom-connect\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport { Box, Button, Container, Grid, Typography, TextField } from \"@mui/material\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initTheme = \"light\";\nconst standaloneFallback = () => EverscaleStandaloneClient.create({\n  connection: {\n    id: 1000,\n    group: \"venom_testnet\",\n    type: \"jrpc\",\n    data: {\n      endpoint: \"https://jrpc.venom.foundation/rpc\"\n    }\n  }\n});\nconst initVenomConnect = async () => {\n  return new VenomConnect({\n    theme: initTheme,\n    checkNetworkId: 1000,\n    providersOptions: {\n      venomwallet: {\n        links: {},\n        walletWaysToConnect: [{\n          package: ProviderRpcClient,\n          packageOptions: {\n            fallback: VenomConnect.getPromise(\"venomwallet\", \"extension\") || (() => Promise.reject()),\n            forceUseFallback: true\n          },\n          packageOptionsStandalone: {\n            fallback: standaloneFallback,\n            forceUseFallback: true\n          },\n          id: \"extension\",\n          type: \"extension\"\n        }],\n        defaultWalletWaysToConnect: [\"mobile\", \"ios\", \"android\"]\n      }\n    }\n  });\n};\nconst App = () => {\n  _s();\n  const [venomConnect, setVenomConnect] = useState();\n  const [venomProvider, setVenomProvider] = useState();\n  const [address, setAddress] = useState();\n  const [balance, setBalance] = useState();\n  const [theme, setTheme] = useState(initTheme);\n  const [info, setInfo] = useState(\"\");\n  const [standaloneMethodsIsFetching, setStandaloneMethodsIsFetching] = useState(false);\n  const [githubToken, setGithubToken] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [githubIssue, setGithubIssue] = useState(\"\");\n  const handleGithubTokenChange = event => {\n    setGithubToken(event.target.value);\n  };\n  const handleUserIdChange = event => {\n    setUserId(event.target.value);\n  };\n  const handleGithubIssueChange = event => {\n    setGithubIssue(event.target.value);\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const oracleApi = \"http://20.169.154.128:8000/\"; // replace with your Oracle API\n\n    try {\n      const response = await axios.post(oracleApi, {\n        user_id: userId,\n        url_input: githubIssue,\n        task_index: 0\n      }, {\n        headers: {\n          \"access_token\": githubToken,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getAddress = async provider => {\n    var _provider$getProvider, _providerState$permis;\n    const providerState = await (provider === null || provider === void 0 ? void 0 : (_provider$getProvider = provider.getProviderState) === null || _provider$getProvider === void 0 ? void 0 : _provider$getProvider.call(provider));\n    const address = providerState === null || providerState === void 0 ? void 0 : (_providerState$permis = providerState.permissions.accountInteraction) === null || _providerState$permis === void 0 ? void 0 : _providerState$permis.address.toString();\n    return address;\n  };\n  const getBalance = async (provider, _address) => {\n    try {\n      var _provider$getBalance;\n      const providerBalance = await (provider === null || provider === void 0 ? void 0 : (_provider$getBalance = provider.getBalance) === null || _provider$getBalance === void 0 ? void 0 : _provider$getBalance.call(provider, _address));\n      return providerBalance;\n    } catch (error) {\n      return undefined;\n    }\n  };\n  const checkAuth = async _venomConnect => {\n    const auth = await (_venomConnect === null || _venomConnect === void 0 ? void 0 : _venomConnect.checkAuth());\n    if (auth) await getAddress(_venomConnect);\n  };\n  const onInitButtonClick = async () => {\n    const initedVenomConnect = await initVenomConnect();\n    setVenomConnect(initedVenomConnect);\n    await checkAuth(initedVenomConnect);\n  };\n  const onConnectButtonClick = async () => {\n    venomConnect === null || venomConnect === void 0 ? void 0 : venomConnect.connect();\n  };\n  const onDisconnectButtonClick = async () => {\n    venomProvider === null || venomProvider === void 0 ? void 0 : venomProvider.disconnect();\n  };\n  const check = async _provider => {\n    const _address = _provider ? await getAddress(_provider) : undefined;\n    const _balance = _provider && _address ? await getBalance(_provider, _address) : undefined;\n    setAddress(_address);\n    setBalance(_balance);\n    if (_provider && _address) setTimeout(() => {\n      check(_provider);\n    }, 7000);\n  };\n  const onConnect = async provider => {\n    setVenomProvider(provider);\n    check(provider);\n  };\n  useEffect(() => {\n    const off = venomConnect === null || venomConnect === void 0 ? void 0 : venomConnect.on(\"connect\", onConnect);\n    return () => {\n      off === null || off === void 0 ? void 0 : off();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [venomConnect]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      my: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          component: \"h1\",\n          textAlign: \"center\",\n          children: \"Bounty Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [!venomConnect && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gap: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: onInitButtonClick,\n              children: \"Login/signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), venomConnect && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        gap: 6,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleFormSubmit,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              alignItems: \"center\",\n              gap: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"GitHub Token\",\n                  variant: \"outlined\",\n                  value: githubToken,\n                  onChange: handleGithubTokenChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"User ID\",\n                  variant: \"outlined\",\n                  value: userId,\n                  onChange: handleUserIdChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"GitHub Issue URL\",\n                  variant: \"outlined\",\n                  value: githubIssue,\n                  onChange: handleGithubIssueChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            alignItems: \"center\",\n            gap: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"span\",\n              children: \"sign in with your wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: onConnectButtonClick,\n                children: \"Connect Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: onDisconnectButtonClick,\n                children: \"Disconnect Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bnZTmVZ6uHTidpkDnDYJ1R0+rOQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ProviderRpcClient","EverscaleStandaloneClient","useEffect","useState","VenomConnect","Box","Button","Container","Grid","Typography","TextField","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","initTheme","standaloneFallback","create","connection","id","group","type","data","endpoint","initVenomConnect","theme","checkNetworkId","providersOptions","venomwallet","links","walletWaysToConnect","package","packageOptions","fallback","getPromise","Promise","reject","forceUseFallback","packageOptionsStandalone","defaultWalletWaysToConnect","App","_s","venomConnect","setVenomConnect","venomProvider","setVenomProvider","address","setAddress","balance","setBalance","setTheme","info","setInfo","standaloneMethodsIsFetching","setStandaloneMethodsIsFetching","githubToken","setGithubToken","userId","setUserId","githubIssue","setGithubIssue","handleGithubTokenChange","event","target","value","handleUserIdChange","handleGithubIssueChange","handleFormSubmit","preventDefault","oracleApi","response","post","user_id","url_input","task_index","headers","console","log","error","getAddress","provider","_provider$getProvider","_providerState$permis","providerState","getProviderState","call","permissions","accountInteraction","toString","getBalance","_address","_provider$getBalance","providerBalance","undefined","checkAuth","_venomConnect","auth","onInitButtonClick","initedVenomConnect","onConnectButtonClick","connect","onDisconnectButtonClick","disconnect","check","_provider","_balance","setTimeout","onConnect","off","on","children","container","justifyContent","my","item","variant","component","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","gap","onClick","direction","onSubmit","label","onChange","_c","$RefreshReg$"],"sources":["/home/king/Desktop/venom-connect-main/examples/react/src/App.tsx"],"sourcesContent":["import { Address, ProviderRpcClient } from \"everscale-inpage-provider\";\nimport { EverscaleStandaloneClient } from \"everscale-standalone-client\";\nimport { useEffect, useState } from \"react\";\nimport { VenomConnect } from \"venom-connect\";\nimport testContractAbi from \"./abi/test.abi.json\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\nimport { Box, Button, Container, Divider, Grid, Typography, TextField } from \"@mui/material\";\nimport axios from 'axios';\n\nconst initTheme = \"light\" as const;\n\nconst standaloneFallback = () =>\n  EverscaleStandaloneClient.create({\n    connection: {\n      id: 1000,\n      group: \"venom_testnet\",\n      type: \"jrpc\",\n      data: {\n        endpoint: \"https://jrpc.venom.foundation/rpc\",\n      },\n    },\n  });\n\nconst initVenomConnect = async () => {\n  return new VenomConnect({\n    theme: initTheme,\n    checkNetworkId: 1000,\n    providersOptions: {\n      venomwallet: {\n        links: {},\n        walletWaysToConnect: [\n          {\n            package: ProviderRpcClient,\n            packageOptions: {\n              fallback:\n                VenomConnect.getPromise(\"venomwallet\", \"extension\") ||\n                (() => Promise.reject()),\n              forceUseFallback: true,\n            },\n            packageOptionsStandalone: {\n              fallback: standaloneFallback,\n              forceUseFallback: true,\n            },\n            id: \"extension\",\n            type: \"extension\",\n          },\n        ],\n        defaultWalletWaysToConnect: [\n          \"mobile\",\n          \"ios\",\n          \"android\",\n        ],\n      },\n    },\n  });\n};\n\nconst App = () => {\n  const [venomConnect, setVenomConnect] = useState<any>();\n  const [venomProvider, setVenomProvider] = useState<any>();\n  const [address, setAddress] = useState();\n  const [balance, setBalance] = useState();\n  const [theme, setTheme] = useState(initTheme);\n  const [info, setInfo] = useState(\"\");\n  const [standaloneMethodsIsFetching, setStandaloneMethodsIsFetching] =\n    useState(false);\n  const [githubToken, setGithubToken] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [githubIssue, setGithubIssue] = useState(\"\");\n\n  const handleGithubTokenChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setGithubToken(event.target.value);\n  };\n  \n  const handleUserIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserId(event.target.value);\n  };\n  \n  const handleGithubIssueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setGithubIssue(event.target.value);\n  };\n  \n  const handleFormSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  \n    const oracleApi = \"http://20.169.154.128:8000/\"; // replace with your Oracle API\n  \n    try {\n      const response = await axios.post(oracleApi, {\n        user_id: userId,\n        url_input: githubIssue,\n        task_index: 0\n      }, {\n        headers: {\n          \"access_token\": githubToken,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n  \n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n\n  const getAddress = async (provider: any) => {\n    const providerState = await provider?.getProviderState?.();\n    const address =\n      providerState?.permissions.accountInteraction?.address.toString();\n    return address;\n  };\n\n  const getBalance = async (provider: any, _address: string) => {\n    try {\n      const providerBalance = await provider?.getBalance?.(_address);\n      return providerBalance;\n    } catch (error) {\n      return undefined;\n    }\n  };\n\n  const checkAuth = async (_venomConnect: any) => {\n    const auth = await _venomConnect?.checkAuth();\n    if (auth) await getAddress(_venomConnect);\n  };\n\n  const onInitButtonClick = async () => {\n    const initedVenomConnect = await initVenomConnect();\n    setVenomConnect(initedVenomConnect);\n    await checkAuth(initedVenomConnect);\n  };\n\n  const onConnectButtonClick = async () => {\n    venomConnect?.connect();\n  };\n\n  const onDisconnectButtonClick = async () => {\n    venomProvider?.disconnect();\n  };\n\n  const check = async (_provider: any) => {\n    const _address = _provider ? await getAddress(_provider) : undefined;\n    const _balance =\n      _provider && _address ? await getBalance(_provider, _address) : undefined;\n\n    setAddress(_address);\n    setBalance(_balance);\n\n    if (_provider && _address)\n      setTimeout(() => {\n        check(_provider);\n      }, 7000);\n  };\n\n  const onConnect = async (provider: any) => {\n    setVenomProvider(provider);\n\n    check(provider);\n  };\n\n  useEffect(() => {\n    const off = venomConnect?.on(\"connect\", onConnect);\n\n    return () => {\n      off?.();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [venomConnect]);\n\n  return (\n    <Box>\n      <Grid container justifyContent=\"center\" my={4}>\n        <Grid item>\n          <Typography variant=\"h1\" component=\"h1\" textAlign=\"center\">\n            Bounty Board\n          </Typography>\n        </Grid>\n      </Grid>\n      <Container>\n        {!venomConnect && (\n          <Grid\n            container\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            gap={2}\n          >\n            <Grid item>\n              <>\n                <Button variant=\"contained\" onClick={onInitButtonClick}>\n                  Login/signup\n                </Button>\n              </>\n            </Grid>\n          </Grid>\n        )}\n        {venomConnect && (\n          <Grid container direction={\"column\"} gap={6}>\n            <Grid item>\n              <form onSubmit={handleFormSubmit}>\n                <Grid\n                  container\n                  direction={\"column\"}\n                  alignItems={\"center\"}\n                  gap={2}\n                >\n                  <Grid item>\n                    <TextField\n                      label=\"GitHub Token\"\n                      variant=\"outlined\"\n                      value={githubToken}\n                      onChange={handleGithubTokenChange}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"User ID\"\n                      variant=\"outlined\"\n                      value={userId}\n                      onChange={handleUserIdChange}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"GitHub Issue URL\"\n                      variant=\"outlined\"\n                      value={githubIssue}\n                      onChange={handleGithubIssueChange}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Button variant=\"contained\" type=\"submit\">\n                      Submit\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Grid>\n            <Grid item>\n              <Grid\n                container\n                direction={\"column\"}\n                alignItems={\"center\"}\n                gap={2}\n              >\n                <Typography variant=\"h5\" component=\"span\">\n                 sign in with your wallet \n                </Typography>\n                <Grid item>\n                  <Button variant=\"contained\" onClick={onConnectButtonClick}>\n                    Connect Wallet\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"contained\" onClick={onDisconnectButtonClick}>\n                    Disconnect Wallet\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAAkBA,iBAAiB,QAAQ,2BAA2B;AACtE,SAASC,yBAAyB,QAAQ,6BAA6B;AACvE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,eAAe;AAE5C,OAAO,4BAA4B;AACnC,OAAO,4BAA4B;AACnC,OAAO,4BAA4B;AACnC,OAAO,4BAA4B;AACnC,SAASC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAWC,IAAI,EAAEC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AAC5F,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,SAAS,GAAG,OAAgB;AAElC,MAAMC,kBAAkB,GAAGA,CAAA,KACzBhB,yBAAyB,CAACiB,MAAM,CAAC;EAC/BC,UAAU,EAAE;IACVC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;MACJC,QAAQ,EAAE;IACZ;EACF;AACF,CAAC,CAAC;AAEJ,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC,OAAO,IAAIrB,YAAY,CAAC;IACtBsB,KAAK,EAAEV,SAAS;IAChBW,cAAc,EAAE,IAAI;IACpBC,gBAAgB,EAAE;MAChBC,WAAW,EAAE;QACXC,KAAK,EAAE,CAAC,CAAC;QACTC,mBAAmB,EAAE,CACnB;UACEC,OAAO,EAAEhC,iBAAiB;UAC1BiC,cAAc,EAAE;YACdC,QAAQ,EACN9B,YAAY,CAAC+B,UAAU,CAAC,aAAa,EAAE,WAAW,CAAC,KAClD,MAAMC,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;YAC1BC,gBAAgB,EAAE;UACpB,CAAC;UACDC,wBAAwB,EAAE;YACxBL,QAAQ,EAAEjB,kBAAkB;YAC5BqB,gBAAgB,EAAE;UACpB,CAAC;UACDlB,EAAE,EAAE,WAAW;UACfE,IAAI,EAAE;QACR,CAAC,CACF;QACDkB,0BAA0B,EAAE,CAC1B,QAAQ,EACR,KAAK,EACL,SAAS;MAEb;IACF;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGzC,QAAQ,CAAM,CAAC;EACvD,MAAM,CAAC0C,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAM,CAAC;EACzD,MAAM,CAAC4C,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC,CAAC;EACxC,MAAM,CAAC8C,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACuB,KAAK,EAAEyB,QAAQ,CAAC,GAAGhD,QAAQ,CAACa,SAAS,CAAC;EAC7C,MAAM,CAACoC,IAAI,EAAEC,OAAO,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmD,2BAA2B,EAAEC,8BAA8B,CAAC,GACjEpD,QAAQ,CAAC,KAAK,CAAC;EACjB,MAAM,CAACqD,WAAW,EAAEC,cAAc,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuD,MAAM,EAAEC,SAAS,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyD,WAAW,EAAEC,cAAc,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM2D,uBAAuB,GAAIC,KAA0C,IAAK;IAC9EN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,kBAAkB,GAAIH,KAA0C,IAAK;IACzEJ,SAAS,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAME,uBAAuB,GAAIJ,KAA0C,IAAK;IAC9EF,cAAc,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAOL,KAAuC,IAAK;IAC1EA,KAAK,CAACM,cAAc,CAAC,CAAC;IAEtB,MAAMC,SAAS,GAAG,6BAA6B,CAAC,CAAC;;IAEjD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM5D,KAAK,CAAC6D,IAAI,CAACF,SAAS,EAAE;QAC3CG,OAAO,EAAEf,MAAM;QACfgB,SAAS,EAAEd,WAAW;QACtBe,UAAU,EAAE;MACd,CAAC,EAAE;QACDC,OAAO,EAAE;UACP,cAAc,EAAEpB,WAAW;UAC3B,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFqB,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAChD,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOwD,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAGD,MAAMC,UAAU,GAAG,MAAOC,QAAa,IAAK;IAAA,IAAAC,qBAAA,EAAAC,qBAAA;IAC1C,MAAMC,aAAa,GAAG,OAAMH,QAAQ,aAARA,QAAQ,wBAAAC,qBAAA,GAARD,QAAQ,CAAEI,gBAAgB,cAAAH,qBAAA,uBAA1BA,qBAAA,CAAAI,IAAA,CAAAL,QAA6B,CAAC;IAC1D,MAAMlC,OAAO,GACXqC,aAAa,aAAbA,aAAa,wBAAAD,qBAAA,GAAbC,aAAa,CAAEG,WAAW,CAACC,kBAAkB,cAAAL,qBAAA,uBAA7CA,qBAAA,CAA+CpC,OAAO,CAAC0C,QAAQ,CAAC,CAAC;IACnE,OAAO1C,OAAO;EAChB,CAAC;EAED,MAAM2C,UAAU,GAAG,MAAAA,CAAOT,QAAa,EAAEU,QAAgB,KAAK;IAC5D,IAAI;MAAA,IAAAC,oBAAA;MACF,MAAMC,eAAe,GAAG,OAAMZ,QAAQ,aAARA,QAAQ,wBAAAW,oBAAA,GAARX,QAAQ,CAAES,UAAU,cAAAE,oBAAA,uBAApBA,oBAAA,CAAAN,IAAA,CAAAL,QAAQ,EAAeU,QAAQ,CAAC;MAC9D,OAAOE,eAAe;IACxB,CAAC,CAAC,OAAOd,KAAK,EAAE;MACd,OAAOe,SAAS;IAClB;EACF,CAAC;EAED,MAAMC,SAAS,GAAG,MAAOC,aAAkB,IAAK;IAC9C,MAAMC,IAAI,GAAG,OAAMD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAED,SAAS,CAAC,CAAC;IAC7C,IAAIE,IAAI,EAAE,MAAMjB,UAAU,CAACgB,aAAa,CAAC;EAC3C,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,kBAAkB,GAAG,MAAM1E,gBAAgB,CAAC,CAAC;IACnDmB,eAAe,CAACuD,kBAAkB,CAAC;IACnC,MAAMJ,SAAS,CAACI,kBAAkB,CAAC;EACrC,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvCzD,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE0D,OAAO,CAAC,CAAC;EACzB,CAAC;EAED,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1CzD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE0D,UAAU,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,KAAK,GAAG,MAAOC,SAAc,IAAK;IACtC,MAAMd,QAAQ,GAAGc,SAAS,GAAG,MAAMzB,UAAU,CAACyB,SAAS,CAAC,GAAGX,SAAS;IACpE,MAAMY,QAAQ,GACZD,SAAS,IAAId,QAAQ,GAAG,MAAMD,UAAU,CAACe,SAAS,EAAEd,QAAQ,CAAC,GAAGG,SAAS;IAE3E9C,UAAU,CAAC2C,QAAQ,CAAC;IACpBzC,UAAU,CAACwD,QAAQ,CAAC;IAEpB,IAAID,SAAS,IAAId,QAAQ,EACvBgB,UAAU,CAAC,MAAM;MACfH,KAAK,CAACC,SAAS,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,MAAMG,SAAS,GAAG,MAAO3B,QAAa,IAAK;IACzCnC,gBAAgB,CAACmC,QAAQ,CAAC;IAE1BuB,KAAK,CAACvB,QAAQ,CAAC;EACjB,CAAC;EAED/E,SAAS,CAAC,MAAM;IACd,MAAM2G,GAAG,GAAGlE,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEmE,EAAE,CAAC,SAAS,EAAEF,SAAS,CAAC;IAElD,OAAO,MAAM;MACXC,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAG,CAAC;IACT,CAAC;IACD;EACF,CAAC,EAAE,CAAClE,YAAY,CAAC,CAAC;EAElB,oBACE9B,OAAA,CAACR,GAAG;IAAA0G,QAAA,gBACFlG,OAAA,CAACL,IAAI;MAACwG,SAAS;MAACC,cAAc,EAAC,QAAQ;MAACC,EAAE,EAAE,CAAE;MAAAH,QAAA,eAC5ClG,OAAA,CAACL,IAAI;QAAC2G,IAAI;QAAAJ,QAAA,eACRlG,OAAA,CAACJ,UAAU;UAAC2G,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAACC,SAAS,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAE3D;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACP7G,OAAA,CAACN,SAAS;MAAAwG,QAAA,GACP,CAACpE,YAAY,iBACZ9B,OAAA,CAACL,IAAI;QACHwG,SAAS;QACTC,cAAc,EAAE,QAAS;QACzBU,UAAU,EAAE,QAAS;QACrBC,GAAG,EAAE,CAAE;QAAAb,QAAA,eAEPlG,OAAA,CAACL,IAAI;UAAC2G,IAAI;UAAAJ,QAAA,eACRlG,OAAA,CAAAE,SAAA;YAAAgG,QAAA,eACElG,OAAA,CAACP,MAAM;cAAC8G,OAAO,EAAC,WAAW;cAACS,OAAO,EAAE3B,iBAAkB;cAAAa,QAAA,EAAC;YAExD;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC,gBACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACP,EACA/E,YAAY,iBACX9B,OAAA,CAACL,IAAI;QAACwG,SAAS;QAACc,SAAS,EAAE,QAAS;QAACF,GAAG,EAAE,CAAE;QAAAb,QAAA,gBAC1ClG,OAAA,CAACL,IAAI;UAAC2G,IAAI;UAAAJ,QAAA,eACRlG,OAAA;YAAMkH,QAAQ,EAAE3D,gBAAiB;YAAA2C,QAAA,eAC/BlG,OAAA,CAACL,IAAI;cACHwG,SAAS;cACTc,SAAS,EAAE,QAAS;cACpBH,UAAU,EAAE,QAAS;cACrBC,GAAG,EAAE,CAAE;cAAAb,QAAA,gBAEPlG,OAAA,CAACL,IAAI;gBAAC2G,IAAI;gBAAAJ,QAAA,eACRlG,OAAA,CAACH,SAAS;kBACRsH,KAAK,EAAC,cAAc;kBACpBZ,OAAO,EAAC,UAAU;kBAClBnD,KAAK,EAAET,WAAY;kBACnByE,QAAQ,EAAEnE;gBAAwB;kBAAAyD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACP7G,OAAA,CAACL,IAAI;gBAAC2G,IAAI;gBAAAJ,QAAA,eACRlG,OAAA,CAACH,SAAS;kBACRsH,KAAK,EAAC,SAAS;kBACfZ,OAAO,EAAC,UAAU;kBAClBnD,KAAK,EAAEP,MAAO;kBACduE,QAAQ,EAAE/D;gBAAmB;kBAAAqD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACP7G,OAAA,CAACL,IAAI;gBAAC2G,IAAI;gBAAAJ,QAAA,eACRlG,OAAA,CAACH,SAAS;kBACRsH,KAAK,EAAC,kBAAkB;kBACxBZ,OAAO,EAAC,UAAU;kBAClBnD,KAAK,EAAEL,WAAY;kBACnBqE,QAAQ,EAAE9D;gBAAwB;kBAAAoD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACP7G,OAAA,CAACL,IAAI;gBAAC2G,IAAI;gBAAAJ,QAAA,eACRlG,OAAA,CAACP,MAAM;kBAAC8G,OAAO,EAAC,WAAW;kBAAC9F,IAAI,EAAC,QAAQ;kBAAAyF,QAAA,EAAC;gBAE1C;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACP7G,OAAA,CAACL,IAAI;UAAC2G,IAAI;UAAAJ,QAAA,eACRlG,OAAA,CAACL,IAAI;YACHwG,SAAS;YACTc,SAAS,EAAE,QAAS;YACpBH,UAAU,EAAE,QAAS;YACrBC,GAAG,EAAE,CAAE;YAAAb,QAAA,gBAEPlG,OAAA,CAACJ,UAAU;cAAC2G,OAAO,EAAC,IAAI;cAACC,SAAS,EAAC,MAAM;cAAAN,QAAA,EAAC;YAE1C;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb7G,OAAA,CAACL,IAAI;cAAC2G,IAAI;cAAAJ,QAAA,eACRlG,OAAA,CAACP,MAAM;gBAAC8G,OAAO,EAAC,WAAW;gBAACS,OAAO,EAAEzB,oBAAqB;gBAAAW,QAAA,EAAC;cAE3D;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACP7G,OAAA,CAACL,IAAI;cAAC2G,IAAI;cAAAJ,QAAA,eACRlG,OAAA,CAACP,MAAM;gBAAC8G,OAAO,EAAC,WAAW;gBAACS,OAAO,EAAEvB,uBAAwB;gBAAAS,QAAA,EAAC;cAE9D;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAAChF,EAAA,CAhNID,GAAG;AAAAyF,EAAA,GAAHzF,GAAG;AAkNT,eAAeA,GAAG;AAAC,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}